# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-19 22:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('build', '0005_auto_20161213_1938'),
        ('github', '0003_auto_20161213_1938'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testclasses', to='github.Repository')),
            ],
            options={
                'verbose_name': 'Test Class',
                'verbose_name_plural': 'Test Classes',
            },
        ),
        migrations.CreateModel(
            name='TestCodeUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.TextField(db_index=True)),
                ('unit_type', models.CharField(db_index=True, max_length=255)),
                ('duration', models.FloatField(blank=True, db_index=True, null=True)),
                ('event', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('sobject', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('email_invocations_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('email_invocations_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('soql_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('soql_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('future_calls_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('future_calls_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('cpu_time_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('cpu_time_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('query_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('query_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_statements_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_statements_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('mobile_apex_push_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('mobile_apex_push_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('heap_size_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('heap_size_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sosl_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sosl_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('queueable_jobs_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('queueable_jobs_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('callouts_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('callouts_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_email_invocations_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_email_invocations_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_soql_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_soql_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_future_calls_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_future_calls_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_cpu_time_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_cpu_time_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_query_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_query_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_statements_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_statements_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_mobile_apex_push_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_mobile_apex_push_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_heap_size_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_heap_size_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_sosl_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_sosl_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_queueable_jobs_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_queueable_jobs_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_callouts_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_callouts_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='testresults.TestCodeUnit')),
            ],
            options={
                'verbose_name': 'Test Code Unit',
                'verbose_name_plural': 'Test Code Units',
            },
        ),
        migrations.CreateModel(
            name='TestEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Test Environment',
                'verbose_name_plural': 'Test Environments',
            },
        ),
        migrations.CreateModel(
            name='TestExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('commit', models.CharField(max_length=64)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testexecutions', to='github.Branch')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testexecutions', to='build.Build')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testexecutions', to='testresults.TestEnvironment')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testexecutions', to='github.Repository')),
            ],
            options={
                'verbose_name': 'Test Execution',
                'verbose_name_plural': 'Test Executions',
            },
        ),
        migrations.CreateModel(
            name='TestMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('testclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methods', to='testresults.TestClass')),
            ],
            options={
                'verbose_name': 'Test Method',
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.FloatField(blank=True, db_index=True, null=True)),
                ('outcome', models.CharField(choices=[(b'Pass', b'Pass'), (b'CompileFail', b'CompileFail'), (b'Fail', b'Fail'), (b'Skip', b'Skip')], db_index=True, max_length=16)),
                ('stacktrace', models.TextField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('email_invocations_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('email_invocations_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('email_invocations_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('soql_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('soql_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('soql_queries_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('future_calls_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('future_calls_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('future_calls_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_rows_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('cpu_time_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('cpu_time_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('cpu_time_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('query_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('query_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('query_rows_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_statements_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_statements_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('dml_statements_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('mobile_apex_push_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('mobile_apex_push_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('mobile_apex_push_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('heap_size_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('heap_size_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('heap_size_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sosl_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sosl_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sosl_queries_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('queueable_jobs_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('queueable_jobs_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('queueable_jobs_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('callouts_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('callouts_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('callouts_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_email_invocations_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_email_invocations_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_email_invocations_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_soql_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_soql_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_soql_queries_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_future_calls_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_future_calls_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_future_calls_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_rows_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_cpu_time_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_cpu_time_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_cpu_time_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_query_rows_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_query_rows_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_query_rows_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_statements_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_statements_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_dml_statements_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_mobile_apex_push_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_mobile_apex_push_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_mobile_apex_push_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_heap_size_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_heap_size_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_heap_size_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_sosl_queries_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_sosl_queries_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_sosl_queries_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_queueable_jobs_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_queueable_jobs_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_queueable_jobs_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_callouts_used', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_callouts_allowed', models.IntegerField(blank=True, db_index=True, null=True)),
                ('test_callouts_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('worst_limit', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('worst_limit_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('worst_limit_nontest', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('worst_limit_nontest_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('worst_limit_test', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('worst_limit_test_percent', models.IntegerField(blank=True, db_index=True, null=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='testresults.TestExecution')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='testresults.TestMethod')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
            },
        ),
        migrations.AddField(
            model_name='testcodeunit',
            name='testresult',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codeunits', to='testresults.TestResult'),
        ),
    ]

// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "metaci",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.dev.yml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "web",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/app",
	"shutdownAction": "stopCompose",
	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		// Uncomment the next line if you want start specific services in your Docker Compose config.
		// "runServices": [],
		// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
		// "shutdownAction": "none",
		// Uncomment the next line to run commands after the container is created - for example installing git.
		// "postCreateCommand": "apt-get update && apt-get install -y git",
		// Add the IDs of extensions you want installed when the container is created in the array below.
		"extensions": [
			"bibhasdn.django-html",
			"coenraads.bracket-pair-colorizer-2",
			"dbaeumer.vscode-eslint",
			"esbenp.prettier-vscode",
			"formulahendry.auto-rename-tag",
			"joshpeng.sublime-babel-vscode",
			"lextudio.restructuredtext",
			"ms-azuretools.vscode-docker",
			"ms-python.python",
			"ms-vscode.sublime-keybindings",
			"naumovs.color-highlight",
			"shinnn.stylelint",
			"stkb.rewrap",
			"syler.sass-indented",
			"tyriar.sort-lines",
			"xabikos.javascriptsnippets"
		],
		"settings": {
			// This will ignore your local shell user setting for Linux since shells like zsh are typically 
			// not in base container images. You can also update this to an specific shell to ensure VS Code 
			// uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
			"terminal.integrated.shell.linux": null,
			"editor.tabSize": 2,
			"editor.formatOnSave": true,
			"editor.defaultFormatter": "esbenp.prettier-vscode",
			"files.insertFinalNewline": true,
			"files.trimFinalNewlines": true,
			"files.trimTrailingWhitespace": true,
			"javascript.suggestionActions.enabled": false,
			"eslint.autoFixOnSave": true,
			"eslint.validate": [
				"javascript",
				"javascriptreact",
				{
					"language": "typescript",
					"autoFix": true
				},
				{
					"language": "typescriptreact",
					"autoFix": true
				}
			],
			"prettier.singleQuote": true,
			"prettier.trailingComma": "all",
			"prettier.arrowParens": "always",
			"typescript.preferences.quoteStyle": "single",
			"python.linting.flake8Enabled": true,
			"python.linting.pylintEnabled": false,
			"python.formatting.provider": "black",
			"python.pythonPath": "/usr/local/bin/python",
			"remote.extensionKind": {
				"ms-azuretools.vscode-docker": "workspace"
			},
			"restructuredtext.linter.extraArgs": [
				"--max-line-length 80"
			],
			"restructuredtext.confPath": "${workspaceFolder}/docs",
			"[javascript]": {
				"editor.formatOnSave": false,
				"editor.rulers": [
					80
				]
			},
			"[restructuredtext]": {
				"editor.rulers": [
					80
				]
			},
			"[markdown]": {
				"editor.rulers": [
					80
				]
			},
			"[javascriptreact]": {
				"editor.formatOnSave": false,
				"editor.rulers": [
					80
				]
			},
			"[typescript]": {
				"editor.formatOnSave": false,
				"editor.rulers": [
					80
				]
			},
			"[typescriptreact]": {
				"editor.formatOnSave": false,
				"editor.rulers": [
					80
				]
			},
			"[python]": {
				"editor.rulers": [
					80
				]
			},
			"files.exclude": {
				"**/.git": true,
				"**/.svn": true,
				"**/.hg": true,
				"**/CVS": true,
				"**/.DS_Store": true,
				"**/*.pyc": true,
				"**/*.pyo": true,
				"jscov_temp": true,
				"jscache": true,
				"__pycache__": true,
				".coverage": true,
				"coverage": true,
				"htmlcov": true,
				"pycov": true,
				".tags": true,
				".cache": true,
				".pytest_cache": true,
				".vscode": true,
				"jscov": true,
				".nyc_output": true,
				"collected-assets": true,
				"staticfiles": true,
				"**/*.egg-info": true
			},
			"search.exclude": {
				"**/node_modules": true,
				"**/bower_components": true,
				"**/*.css.map": true,
				"**/*.js.map": true,
				"npm-shrinkwrap.json": true,
				"yarn.lock": true,
				"package-lock.json": true,
				"npm-debug.log": true,
				"yarn-debug.log": true,
				"yarn-error.log": true
			}
		}
	}
}
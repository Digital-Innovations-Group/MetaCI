#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------
version: "3"

services:
  postgres:
    environment:
      - POSTGRES_USER=metaci
      - POSTGRES_DB=metaci
      - POSTGRES_PASSWORD=
    volumes:
      - ./postgres:/var/lib/postgresql/data:delegated
    image: postgres:10.6
    ports: 
    - "5432:5432/tcp"
    restart: always
  redis:
    image: "redis:5"
    ports:
      - "6379:6379"
  web:
    build:
      context: .
      args:
        - BUILD_ENV=development
      dockerfile: Dockerfile
    command: |
        /bin/bash -c 'while !</dev/tcp/postgres/5432; do /bin/sleep 1; done; \
        /bin/sleep 1; /bin/sh /app/utility/start_server.sh;'
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      - BUILD_ENV=development
    volumes:
      - .:/app

# version: '3'
# services:
#   # Update this to the name of the service you want to work with in your docker-compose.yml file
#   web:
#     # You may want to add a non-root user to your Dockerfile. On Linux, this will prevent
#     # new files getting created as root. See https://aka.ms/vscode-remote/containers/non-root-user
#     # for the needed Dockerfile updates and then uncomment the next line.
#     # user: vscode

#     # Uncomment if you want to add a different Dockerfile in the .devcontainer folder
#     # build:
#     #   context: .
#     #   dockerfile: Dockerfile

#     # Uncomment if you want to expose any additional ports. The snippet below exposes port 3000.
#     # ports:
#     #   - 3000:3000
    
#     volumes:
#       # Update this to wherever you want VS Code to mount the folder of your project
#       - ..:/workspace

#       # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker-compose for details.
#       # - /var/run/docker.sock:/var/run/docker.sock 

#     # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
#     # cap_add:
#     #   - SYS_PTRACE
#     # security_opt:
#     #   - seccomp:unconfined

#     # Overrides default command so things don't shut down after the process ends.
#     command: sleep infinity 
 

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on darwin)" generated="20191023 09:38:43.623" rpa="false">
<suite id="s1" name="Nested" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests">
<suite id="s1-s1" name="Cumulusci" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/cumulusci">
<suite id="s1-s1-s1" name="Base" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/cumulusci/base.robot">
<test id="s1-s1-s1-t1" name="AAAAA Test Set Login Url">
<kw name="Set Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Sets the LOGIN_URL variable in the suite scope which will
automatically log into the target Salesforce org.</doc>
<msg timestamp="20191023 09:38:43.700" level="INFO">${LOGIN_URL} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:38:43.700" endtime="20191023 09:38:43.701"></status>
</kw>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${LOGIN_URL}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:43.701" endtime="20191023 09:38:43.701"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:43.699" endtime="20191023 09:38:43.701" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Test Login Url">
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:38:43.702" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:38:43.702" endtime="20191023 09:38:43.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${login_url}</arg>
<arg>secur/frontdoor.jsp?sid=</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:43.702" endtime="20191023 09:38:43.702"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:43.701" endtime="20191023 09:38:43.702" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Test Get Org Info">
<kw name="Get Org Info" library="cumulusci.robotframework.CumulusCI">
<doc>Returns a dictionary of the org information for the current target
Salesforce org</doc>
<assign>
<var>&amp;{org_info}</var>
</assign>
<msg timestamp="20191023 09:38:43.704" level="INFO">&amp;{org_info} = { config_file=orgs/dev.json | days=7 | set_password=False | scratch=True | namespaced=False | config_name=dev | sfdx_alias=CumulusCI__dev | scratch_org_type=workspace | email_address=pprescod@salesfor...</msg>
<status status="PASS" starttime="20191023 09:38:43.703" endtime="20191023 09:38:43.704"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${org_info}</arg>
<arg>org_id</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:43.704" endtime="20191023 09:38:43.704"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${org_info}</arg>
<arg>username</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:43.704" endtime="20191023 09:38:43.705"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:43.703" endtime="20191023 09:38:43.705" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Test Get Namespace Prefix">
<kw name="Get Namespace Prefix" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the namespace prefix (including __) for the specified package name.
(Defaults to project__package__name_managed from the current project config.)</doc>
<assign>
<var>${ns}</var>
</assign>
<msg timestamp="20191023 09:38:44.288" level="INFO">${ns} = </msg>
<status status="PASS" starttime="20191023 09:38:43.706" endtime="20191023 09:38:44.288"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${ns}</arg>
</arguments>
<msg timestamp="20191023 09:38:44.288" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191023 09:38:44.288" endtime="20191023 09:38:44.288"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:43.705" endtime="20191023 09:38:44.289" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Test Run Task">
<kw name="Run Task" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a named CumulusCI task for the current project with optional
support for overriding task options via kwargs.</doc>
<arguments>
<arg>create_package</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:44.289" endtime="20191023 09:38:48.254"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:44.289" endtime="20191023 09:38:48.255" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Test Run Task With Options">
<kw name="Run Task" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a named CumulusCI task for the current project with optional
support for overriding task options via kwargs.</doc>
<arguments>
<arg>create_package</arg>
<arg>package=Test Package</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:48.257" endtime="20191023 09:38:51.204"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:48.256" endtime="20191023 09:38:51.204" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Test Run Task Missing">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>TaskNotFoundError: Task not found: does_not_exist</arg>
<arg>Run Task</arg>
<arg>does_not_exist</arg>
</arguments>
<kw name="Run Task" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a named CumulusCI task for the current project with optional
support for overriding task options via kwargs.</doc>
<arguments>
<arg>does_not_exist</arg>
</arguments>
<msg timestamp="20191023 09:38:51.212" level="FAIL">TaskNotFoundError: Task not found: does_not_exist</msg>
<status status="FAIL" starttime="20191023 09:38:51.207" endtime="20191023 09:38:51.212"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:51.206" endtime="20191023 09:38:51.213"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:51.205" endtime="20191023 09:38:51.213" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Test Run Task Class">
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.salesforce.CreatePackage</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:51.214" endtime="20191023 09:38:54.801"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:51.213" endtime="20191023 09:38:54.802" critical="yes"></status>
</test>
<test id="s1-s1-s1-t9" name="Test Run Task Class With Options">
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.salesforce.CreatePackage</arg>
<arg>package=Test Package</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:54.805" endtime="20191023 09:38:58.263"></status>
</kw>
<status status="PASS" starttime="20191023 09:38:54.802" endtime="20191023 09:38:58.264" critical="yes"></status>
</test>
<status status="PASS" starttime="20191023 09:38:43.649" endtime="20191023 09:38:58.266"></status>
</suite>
<suite id="s1-s1-s2" name="Bulkdata" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/cumulusci/bulkdata.robot">
<test id="s1-s1-s2-t1" name="Test Run Bulk Data Generation">
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.delete.DeleteData</arg>
<arg>objects=Account</arg>
<arg>where=BillingStreet='Baker St.'</arg>
</arguments>
<status status="PASS" starttime="20191023 09:38:58.540" endtime="20191023 09:39:06.671"></status>
</kw>
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.delete.DeleteData</arg>
<arg>objects=Contact</arg>
<arg>where=MailingStreet='Baker St.'</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:06.672" endtime="20191023 09:39:13.447"></status>
</kw>
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.generate_and_load_data.GenerateAndLoadData</arg>
<arg>num_records=20</arg>
<arg>mapping=cumulusci/tasks/bulkdata/tests/mapping_vanilla_sf.yml</arg>
<arg>data_generation_task=cumulusci.tasks.bulkdata.tests.dummy_data_factory.GenerateDummyData</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:13.447" endtime="20191023 09:39:26.164"></status>
</kw>
<kw name="Assert Row Count">
<arguments>
<arg>20</arg>
<arg>Account</arg>
<arg>BillingStreet=Baker St.</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Salesforce Query</arg>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${result}</var>
</assign>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<msg timestamp="20191023 09:39:26.165" level="INFO">Running SOQL Query: SELECT COUNT(Id) FROM Account WHERE BillingStreet = 'Baker St.'</msg>
<status status="PASS" starttime="20191023 09:39:26.165" endtime="20191023 09:39:26.928"></status>
</kw>
<msg timestamp="20191023 09:39:26.928" level="INFO">${status} = PASS</msg>
<msg timestamp="20191023 09:39:26.928" level="INFO">${result} = [OrderedDict([('attributes', OrderedDict([('type', 'AggregateResult')])), ('expr0', 20)])]</msg>
<status status="PASS" starttime="20191023 09:39:26.165" endtime="20191023 09:39:26.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' != 'PASS'</arg>
<arg>Log</arg>
<arg>Salesforce query failed: probably timeout. ${object_name} ${result}</arg>
<arg>console=True</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:26.929" endtime="20191023 09:39:26.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>PASS</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:26.930" endtime="20191023 09:39:26.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result}[0][expr0]</arg>
</arguments>
<assign>
<var>${matching_records}</var>
</assign>
<msg timestamp="20191023 09:39:26.931" level="INFO">${matching_records} = 20</msg>
<status status="PASS" starttime="20191023 09:39:26.930" endtime="20191023 09:39:26.931"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${matching_records}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20191023 09:39:26.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191023 09:39:26.931" endtime="20191023 09:39:26.931"></status>
</kw>
<status status="PASS" starttime="20191023 09:39:26.164" endtime="20191023 09:39:26.932"></status>
</kw>
<kw name="Assert Row Count">
<arguments>
<arg>15</arg>
<arg>Contact</arg>
<arg>MailingStreet=Baker St.</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Salesforce Query</arg>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${result}</var>
</assign>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<msg timestamp="20191023 09:39:26.933" level="INFO">Running SOQL Query: SELECT COUNT(Id) FROM Contact WHERE MailingStreet = 'Baker St.'</msg>
<status status="PASS" starttime="20191023 09:39:26.933" endtime="20191023 09:39:27.082"></status>
</kw>
<msg timestamp="20191023 09:39:27.082" level="INFO">${status} = PASS</msg>
<msg timestamp="20191023 09:39:27.082" level="INFO">${result} = [OrderedDict([('attributes', OrderedDict([('type', 'AggregateResult')])), ('expr0', 15)])]</msg>
<status status="PASS" starttime="20191023 09:39:26.932" endtime="20191023 09:39:27.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' != 'PASS'</arg>
<arg>Log</arg>
<arg>Salesforce query failed: probably timeout. ${object_name} ${result}</arg>
<arg>console=True</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:27.083" endtime="20191023 09:39:27.084"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>PASS</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:27.084" endtime="20191023 09:39:27.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result}[0][expr0]</arg>
</arguments>
<assign>
<var>${matching_records}</var>
</assign>
<msg timestamp="20191023 09:39:27.085" level="INFO">${matching_records} = 15</msg>
<status status="PASS" starttime="20191023 09:39:27.085" endtime="20191023 09:39:27.085"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${matching_records}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20191023 09:39:27.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191023 09:39:27.085" endtime="20191023 09:39:27.087"></status>
</kw>
<status status="PASS" starttime="20191023 09:39:26.932" endtime="20191023 09:39:27.087"></status>
</kw>
<tags>
<tag>bulkdata</tag>
</tags>
<status status="PASS" starttime="20191023 09:38:58.539" endtime="20191023 09:39:27.088" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Batching">
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.delete.DeleteData</arg>
<arg>objects=Account</arg>
<arg>where=BillingStreet='Baker St.'</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:27.089" endtime="20191023 09:39:38.109"></status>
</kw>
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.delete.DeleteData</arg>
<arg>objects=Contact</arg>
<arg>where=MailingStreet='Baker St.'</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:38.109" endtime="20191023 09:39:44.431"></status>
</kw>
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.generate_and_load_data.GenerateAndLoadData</arg>
<arg>num_records=20</arg>
<arg>mapping=cumulusci/tasks/bulkdata/tests/mapping_vanilla_sf.yml</arg>
<arg>batch_size=4</arg>
<arg>data_generation_task=cumulusci.tasks.bulkdata.tests.dummy_data_factory.GenerateDummyData</arg>
</arguments>
<status status="PASS" starttime="20191023 09:39:44.432" endtime="20191023 09:40:43.443"></status>
</kw>
<kw name="Assert Row Count">
<arguments>
<arg>20</arg>
<arg>Account</arg>
<arg>BillingStreet=Baker St.</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Salesforce Query</arg>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${result}</var>
</assign>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<msg timestamp="20191023 09:40:43.445" level="INFO">Running SOQL Query: SELECT COUNT(Id) FROM Account WHERE BillingStreet = 'Baker St.'</msg>
<status status="PASS" starttime="20191023 09:40:43.444" endtime="20191023 09:40:43.627"></status>
</kw>
<msg timestamp="20191023 09:40:43.628" level="INFO">${status} = PASS</msg>
<msg timestamp="20191023 09:40:43.628" level="INFO">${result} = [OrderedDict([('attributes', OrderedDict([('type', 'AggregateResult')])), ('expr0', 20)])]</msg>
<status status="PASS" starttime="20191023 09:40:43.444" endtime="20191023 09:40:43.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' != 'PASS'</arg>
<arg>Log</arg>
<arg>Salesforce query failed: probably timeout. ${object_name} ${result}</arg>
<arg>console=True</arg>
</arguments>
<status status="PASS" starttime="20191023 09:40:43.628" endtime="20191023 09:40:43.629"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>PASS</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:40:43.629" endtime="20191023 09:40:43.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result}[0][expr0]</arg>
</arguments>
<assign>
<var>${matching_records}</var>
</assign>
<msg timestamp="20191023 09:40:43.630" level="INFO">${matching_records} = 20</msg>
<status status="PASS" starttime="20191023 09:40:43.630" endtime="20191023 09:40:43.630"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${matching_records}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20191023 09:40:43.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191023 09:40:43.630" endtime="20191023 09:40:43.631"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:43.443" endtime="20191023 09:40:43.631"></status>
</kw>
<kw name="Assert Row Count">
<arguments>
<arg>15</arg>
<arg>Contact</arg>
<arg>MailingStreet=Baker St.</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Salesforce Query</arg>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${result}</var>
</assign>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>${object_name}</arg>
<arg>select=COUNT(Id)</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<msg timestamp="20191023 09:40:43.632" level="INFO">Running SOQL Query: SELECT COUNT(Id) FROM Contact WHERE MailingStreet = 'Baker St.'</msg>
<status status="PASS" starttime="20191023 09:40:43.632" endtime="20191023 09:40:43.889"></status>
</kw>
<msg timestamp="20191023 09:40:43.890" level="INFO">${status} = PASS</msg>
<msg timestamp="20191023 09:40:43.890" level="INFO">${result} = [OrderedDict([('attributes', OrderedDict([('type', 'AggregateResult')])), ('expr0', 15)])]</msg>
<status status="PASS" starttime="20191023 09:40:43.632" endtime="20191023 09:40:43.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' != 'PASS'</arg>
<arg>Log</arg>
<arg>Salesforce query failed: probably timeout. ${object_name} ${result}</arg>
<arg>console=True</arg>
</arguments>
<status status="PASS" starttime="20191023 09:40:43.890" endtime="20191023 09:40:43.891"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>PASS</arg>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:40:43.891" endtime="20191023 09:40:43.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result}[0][expr0]</arg>
</arguments>
<assign>
<var>${matching_records}</var>
</assign>
<msg timestamp="20191023 09:40:43.892" level="INFO">${matching_records} = 15</msg>
<status status="PASS" starttime="20191023 09:40:43.892" endtime="20191023 09:40:43.892"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${matching_records}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20191023 09:40:43.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191023 09:40:43.892" endtime="20191023 09:40:43.893"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:43.631" endtime="20191023 09:40:43.893"></status>
</kw>
<tags>
<tag>bulkdata</tag>
</tags>
<status status="PASS" starttime="20191023 09:39:27.088" endtime="20191023 09:40:43.893" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Test Error Handling">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>STARTS:TaskOptionsError:</arg>
<arg>Run Task Class</arg>
<arg>cumulusci.tasks.bulkdata.generate_and_load_data.GenerateAndLoadData</arg>
<arg>num_records=20</arg>
<arg>mapping=cumulusci/tasks/bulkdata/tests/mapping_vanilla_sf.yml</arg>
<arg>batch_size=5</arg>
<arg>database_url=sqlite:////tmp/foo.db</arg>
<arg>data_generation_task=cumulusci.tasks.bulkdata.tests.dummy_data_factory.GenerateDummyData</arg>
</arguments>
<kw name="Run Task Class" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a CumulusCI task class with task options via kwargs.</doc>
<arguments>
<arg>cumulusci.tasks.bulkdata.generate_and_load_data.GenerateAndLoadData</arg>
<arg>num_records=20</arg>
<arg>mapping=cumulusci/tasks/bulkdata/tests/mapping_vanilla_sf.yml</arg>
<arg>batch_size=5</arg>
<arg>database_url=sqlite:////tmp/foo.db</arg>
<arg>data_generation_task=cumulusci.tasks.bulkdata.tests.dummy_data_factory.GenerateDummyData</arg>
</arguments>
<msg timestamp="20191023 09:40:43.899" level="FAIL">TaskOptionsError: You may not specify both `database_url` and `batch_size` options.</msg>
<status status="FAIL" starttime="20191023 09:40:43.895" endtime="20191023 09:40:43.899"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:43.895" endtime="20191023 09:40:43.899"></status>
</kw>
<tags>
<tag>bulkdata</tag>
</tags>
<status status="PASS" starttime="20191023 09:40:43.894" endtime="20191023 09:40:43.899" critical="yes"></status>
</test>
<status status="PASS" starttime="20191023 09:38:58.270" endtime="20191023 09:40:43.901"></status>
</suite>
<suite id="s1-s1-s3" name="Communities" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/cumulusci/communities.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Ensure community exists</arg>
<arg>Kōkua</arg>
<arg>kokua</arg>
<arg>AND</arg>
<arg>Ensure community exists</arg>
<arg>Ohana</arg>
<arg>ohana</arg>
</arguments>
<kw name="Ensure community exists">
<doc>Creates a community with the given name if it doesn't exist</doc>
<arguments>
<arg>Kōkua</arg>
<arg>kokua</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>get community info</arg>
<arg>${community name}</arg>
</arguments>
<assign>
<var>${passed}</var>
</assign>
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>${community name}</arg>
</arguments>
<msg timestamp="20191023 09:40:44.925" level="FAIL">Unable to find community information for 'Kōkua'</msg>
<status status="FAIL" starttime="20191023 09:40:43.980" endtime="20191023 09:40:44.925"></status>
</kw>
<msg timestamp="20191023 09:40:44.925" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20191023 09:40:43.980" endtime="20191023 09:40:44.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not $passed</arg>
<arg>run task</arg>
<arg>create_community</arg>
<arg>template=VF Template</arg>
<arg>name=${community name}</arg>
<arg>url_path_prefix=${url prefix}</arg>
</arguments>
<kw name="Run Task" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a named CumulusCI task for the current project with optional
support for overriding task options via kwargs.</doc>
<arguments>
<arg>create_community</arg>
<arg>template=VF Template</arg>
<arg>name=${community name}</arg>
<arg>url_path_prefix=${url prefix}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:40:44.931" endtime="20191023 09:41:34.315"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:44.925" endtime="20191023 09:41:34.315"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:43.979" endtime="20191023 09:41:34.315"></status>
</kw>
<kw name="Ensure community exists">
<doc>Creates a community with the given name if it doesn't exist</doc>
<arguments>
<arg>Ohana</arg>
<arg>ohana</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>get community info</arg>
<arg>${community name}</arg>
</arguments>
<assign>
<var>${passed}</var>
</assign>
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>${community name}</arg>
</arguments>
<msg timestamp="20191023 09:41:34.879" level="FAIL">Unable to find community information for 'Ohana'</msg>
<status status="FAIL" starttime="20191023 09:41:34.316" endtime="20191023 09:41:34.879"></status>
</kw>
<msg timestamp="20191023 09:41:34.879" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20191023 09:41:34.316" endtime="20191023 09:41:34.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not $passed</arg>
<arg>run task</arg>
<arg>create_community</arg>
<arg>template=VF Template</arg>
<arg>name=${community name}</arg>
<arg>url_path_prefix=${url prefix}</arg>
</arguments>
<kw name="Run Task" library="cumulusci.robotframework.CumulusCI">
<doc>Runs a named CumulusCI task for the current project with optional
support for overriding task options via kwargs.</doc>
<arguments>
<arg>create_community</arg>
<arg>template=VF Template</arg>
<arg>name=${community name}</arg>
<arg>url_path_prefix=${url prefix}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:34.881" endtime="20191023 09:41:52.054"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:34.880" endtime="20191023 09:41:52.054"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:34.315" endtime="20191023 09:41:52.055"></status>
</kw>
<status status="PASS" starttime="20191023 09:40:43.978" endtime="20191023 09:41:52.055"></status>
</kw>
<test id="s1-s1-s3-t1" name="Get community info for specific community">
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>Kōkua</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20191023 09:41:52.056" level="INFO">${info} = {'allowChatterAccessWithoutLogin': False, 'allowMembersToFlag': False, 'description': None, 'id': '0DB4F0000004Z0PWAU', 'invitationsEnabled': False, 'knowledgeableEnabled': False, 'loginUrl': 'https:/...</msg>
<status status="PASS" starttime="20191023 09:41:52.056" endtime="20191023 09:41:52.056"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${info}</arg>
<arg>name</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.056" endtime="20191023 09:41:52.056"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${info}</arg>
<arg>loginUrl</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.057" endtime="20191023 09:41:52.057"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${info}</arg>
<arg>siteUrl</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.057" endtime="20191023 09:41:52.057"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${info['name']}</arg>
<arg>Kōkua</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.057" endtime="20191023 09:41:52.058"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${info['urlPathPrefix']}</arg>
<arg>kokua</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.058" endtime="20191023 09:41:52.058"></status>
</kw>
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>Ohana</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20191023 09:41:52.639" level="INFO">${info} = {'allowChatterAccessWithoutLogin': False, 'allowMembersToFlag': False, 'description': None, 'id': '0DB4F0000004Z0UWAU', 'invitationsEnabled': False, 'knowledgeableEnabled': False, 'loginUrl': 'https:/...</msg>
<status status="PASS" starttime="20191023 09:41:52.058" endtime="20191023 09:41:52.639"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${info['name']}</arg>
<arg>Ohana</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.639" endtime="20191023 09:41:52.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${info['urlPathPrefix']}</arg>
<arg>ohana</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:52.640" endtime="20191023 09:41:52.640"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:52.055" endtime="20191023 09:41:52.641" critical="yes"></status>
</test>
<test id="s1-s1-s3-t2" name="Get community info for non-existing community throws error">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>Unable to find community information for 'bōgusCommunity'</arg>
<arg>get community info</arg>
<arg>bōgusCommunity</arg>
</arguments>
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>bōgusCommunity</arg>
</arguments>
<msg timestamp="20191023 09:41:53.216" level="FAIL">Unable to find community information for 'bōgusCommunity'</msg>
<status status="FAIL" starttime="20191023 09:41:52.642" endtime="20191023 09:41:53.216"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:52.642" endtime="20191023 09:41:53.217"></status>
</kw>
<doc>Verify that an unknown community name throws a reasonable error message</doc>
<status status="PASS" starttime="20191023 09:41:52.641" endtime="20191023 09:41:53.217" critical="yes"></status>
</test>
<test id="s1-s1-s3-t3" name="Get community info with key">
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>Kōkua</arg>
<arg>loginUrl</arg>
</arguments>
<assign>
<var>${loginUrl}</var>
</assign>
<msg timestamp="20191023 09:41:53.218" level="INFO">${loginUrl} = https://sandbox-efficiency-fun-590-dev-ed-16df06531de.cs93.force.com/kokua/login</msg>
<status status="PASS" starttime="20191023 09:41:53.218" endtime="20191023 09:41:53.218"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${loginUrl}</arg>
<arg>https://.*/kokua/login</arg>
</arguments>
<status status="PASS" starttime="20191023 09:41:53.218" endtime="20191023 09:41:53.218"></status>
</kw>
<doc>Verify we can Fetch data for a single key</doc>
<status status="PASS" starttime="20191023 09:41:53.217" endtime="20191023 09:41:53.219" critical="yes"></status>
</test>
<test id="s1-s1-s3-t4" name="Get community info with unknown key throws error">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>Invalid key 'bōgus'</arg>
<arg>get community info</arg>
<arg>Kōkua</arg>
<arg>bōgus</arg>
</arguments>
<kw name="Get Community Info" library="cumulusci.robotframework.CumulusCI">
<doc>This keyword uses the Salesforce API to get information about a community.</doc>
<arguments>
<arg>Kōkua</arg>
<arg>bōgus</arg>
</arguments>
<msg timestamp="20191023 09:41:53.220" level="FAIL">Invalid key 'bōgus'</msg>
<status status="FAIL" starttime="20191023 09:41:53.220" endtime="20191023 09:41:53.220"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:53.219" endtime="20191023 09:41:53.220"></status>
</kw>
<doc>Verify that an unknown key throws a reasonable error message</doc>
<status status="PASS" starttime="20191023 09:41:53.219" endtime="20191023 09:41:53.220" critical="yes"></status>
</test>
<status status="PASS" starttime="20191023 09:40:43.904" endtime="20191023 09:41:53.221"></status>
</suite>
<status status="PASS" starttime="20191023 09:38:43.647" endtime="20191023 09:41:53.223"></status>
</suite>
<suite id="s1-s2" name="Salesforce" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce">
<suite id="s1-s2-s1" name="Api" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/api.robot">
<test id="s1-s2-s1-t1" name="Salesforce Delete">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:41:59.237" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:41:53.237" endtime="20191023 09:41:59.238"></status>
</kw>
<kw name="Log Variables" library="BuiltIn">
<doc>Logs all variables in the current scope with given log level.</doc>
<msg timestamp="20191023 09:41:59.240" level="INFO">${/} = /</msg>
<msg timestamp="20191023 09:41:59.240" level="INFO">${:} = :</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${\n} = 
</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${BROWSER} = chrome</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${CHROME_BINARY} = </msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${DEBUG} = False</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${DEBUG_FILE} = NONE</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${DEFAULT BROWSER SIZE} = 1280x1024</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${EXECDIR} = /Users/pprescod/code/CumulusCI</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${False} = False</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${IMPLICIT_WAIT} = 7.0</msg>
<msg timestamp="20191023 09:41:59.241" level="INFO">${INITIAL_TIMEOUT} = 180.0</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${LOCATION STRATEGIES INITIALIZED} = False</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${LOG_FILE} = /Users/pprescod/code/CumulusCI/log.html</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${LOG_LEVEL} = INFO</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${None} = None</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${null} = None</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${org} = dev</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${OUTPUT_DIR} = /Users/pprescod/code/CumulusCI</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${OUTPUT_FILE} = /Users/pprescod/code/CumulusCI/output.xml</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${PREV_TEST_MESSAGE} = </msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${PREV_TEST_NAME} = Get community info with unknown key throws error</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${PREV_TEST_STATUS} = PASS</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${REPORT_FILE} = /Users/pprescod/code/CumulusCI/report.html</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${SPACE} =  </msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${SUITE_DOCUMENTATION} = </msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">&amp;{SUITE_METADATA} = { }</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${SUITE_NAME} = Tests.Salesforce.Api</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${SUITE_SOURCE} = /Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/api.robot</msg>
<msg timestamp="20191023 09:41:59.242" level="INFO">${TEMPDIR} = /var/folders/q4/9bjz2lm10nsfv2z3l_pqjtt40000gq/T</msg>
<msg timestamp="20191023 09:41:59.243" level="INFO">${TEST_DOCUMENTATION} = </msg>
<msg timestamp="20191023 09:41:59.243" level="INFO">${TEST_NAME} = Salesforce Delete</msg>
<msg timestamp="20191023 09:41:59.243" level="INFO">@{TEST_TAGS} = [ api | Runme ]</msg>
<msg timestamp="20191023 09:41:59.243" level="INFO">${TIMEOUT} = 30.0</msg>
<msg timestamp="20191023 09:41:59.243" level="INFO">${True} = True</msg>
<status status="PASS" starttime="20191023 09:41:59.238" endtime="20191023 09:41:59.243"></status>
</kw>
<kw name="Create Contact">
<assign>
<var>&amp;{contact}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20191023 09:41:59.244" level="INFO">${first_name} = qRm2evRT</msg>
<status status="PASS" starttime="20191023 09:41:59.244" endtime="20191023 09:41:59.244"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${last_name}</var>
</assign>
<msg timestamp="20191023 09:41:59.244" level="INFO">${last_name} = Z73DSk6w</msg>
<status status="PASS" starttime="20191023 09:41:59.244" endtime="20191023 09:41:59.244"></status>
</kw>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=${first_name}</arg>
<arg>LastName=${last_name}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:41:59.245" level="INFO">Inserting Contact with values {'FirstName': 'qRm2evRT', 'LastName': 'Z73DSk6w'}</msg>
<msg timestamp="20191023 09:41:59.702" level="INFO">Storing Contact 0034F00000SaS2SQAV to session records</msg>
<msg timestamp="20191023 09:41:59.702" level="INFO">${contact_id} = 0034F00000SaS2SQAV</msg>
<status status="PASS" starttime="20191023 09:41:59.245" endtime="20191023 09:41:59.702"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>${contact_id}</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:41:59.703" level="INFO">Getting Contact with Id 0034F00000SaS2SQAV</msg>
<msg timestamp="20191023 09:41:59.893" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS2SQAV'} | Id=0034F00000SaS2SQAV | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=Z73DSk6w...</msg>
<status status="PASS" starttime="20191023 09:41:59.702" endtime="20191023 09:41:59.893"></status>
</kw>
<msg timestamp="20191023 09:41:59.893" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS2SQAV'} | Id=0034F00000SaS2SQAV | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=Z73DSk6w...</msg>
<status status="PASS" starttime="20191023 09:41:59.243" endtime="20191023 09:41:59.893"></status>
</kw>
<kw name="Salesforce Delete" library="cumulusci.robotframework.Salesforce">
<doc>Deletes a Saleforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>&amp;{contact}[Id]</arg>
</arguments>
<msg timestamp="20191023 09:41:59.894" level="INFO">Deleting Contact with Id 0034F00000SaS2SQAV</msg>
<status status="PASS" starttime="20191023 09:41:59.894" endtime="20191023 09:42:00.252"></status>
</kw>
<kw name="Soql Query" library="cumulusci.robotframework.Salesforce">
<doc>Runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Select Id from Contact WHERE Id = '&amp;{contact}[Id]'</arg>
</arguments>
<assign>
<var>&amp;{result}</var>
</assign>
<msg timestamp="20191023 09:42:00.254" level="INFO">Running SOQL Query: Select Id from Contact WHERE Id = '0034F00000SaS2SQAV'</msg>
<msg timestamp="20191023 09:42:00.415" level="INFO">&amp;{result} = { totalSize=0 | done=True | records=[] }</msg>
<status status="PASS" starttime="20191023 09:42:00.253" endtime="20191023 09:42:00.415"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{result}[totalSize]</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:00.415" endtime="20191023 09:42:00.416"></status>
</kw>
<tags>
<tag>api</tag>
<tag>Runme</tag>
</tags>
<status status="PASS" starttime="20191023 09:41:53.236" endtime="20191023 09:42:00.417" critical="yes"></status>
</test>
<test id="s1-s2-s1-t2" name="Salesforce Insert">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:06.421" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:00.418" endtime="20191023 09:42:06.421"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20191023 09:42:06.423" level="INFO">${first_name} = rWrcbgBU</msg>
<status status="PASS" starttime="20191023 09:42:06.422" endtime="20191023 09:42:06.423"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${last_name}</var>
</assign>
<msg timestamp="20191023 09:42:06.424" level="INFO">${last_name} = CiqFi7VB</msg>
<status status="PASS" starttime="20191023 09:42:06.423" endtime="20191023 09:42:06.424"></status>
</kw>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=${first_name}</arg>
<arg>LastName=${last_name}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:06.425" level="INFO">Inserting Contact with values {'FirstName': 'rWrcbgBU', 'LastName': 'CiqFi7VB'}</msg>
<msg timestamp="20191023 09:42:06.800" level="INFO">Storing Contact 0034F00000SaS2lQAF to session records</msg>
<msg timestamp="20191023 09:42:06.800" level="INFO">${contact_id} = 0034F00000SaS2lQAF</msg>
<status status="PASS" starttime="20191023 09:42:06.424" endtime="20191023 09:42:06.807"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>${contact_id}</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:06.808" level="INFO">Getting Contact with Id 0034F00000SaS2lQAF</msg>
<msg timestamp="20191023 09:42:07.008" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS2lQAF'} | Id=0034F00000SaS2lQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=CiqFi7VB...</msg>
<status status="PASS" starttime="20191023 09:42:06.807" endtime="20191023 09:42:07.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[FirstName]</arg>
<arg>${first_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:07.009" endtime="20191023 09:42:07.009"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[LastName]</arg>
<arg>${last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:07.009" endtime="20191023 09:42:07.010"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:00.417" endtime="20191023 09:42:07.010" critical="yes"></status>
</test>
<test id="s1-s2-s1-t3" name="Salesforce Update">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:13.014" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:07.011" endtime="20191023 09:42:13.014"></status>
</kw>
<kw name="Create Contact">
<assign>
<var>&amp;{contact}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20191023 09:42:13.017" level="INFO">${first_name} = GeVqq7X5</msg>
<status status="PASS" starttime="20191023 09:42:13.016" endtime="20191023 09:42:13.017"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${last_name}</var>
</assign>
<msg timestamp="20191023 09:42:13.017" level="INFO">${last_name} = rSzRp1Y9</msg>
<status status="PASS" starttime="20191023 09:42:13.017" endtime="20191023 09:42:13.018"></status>
</kw>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=${first_name}</arg>
<arg>LastName=${last_name}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:13.019" level="INFO">Inserting Contact with values {'FirstName': 'GeVqq7X5', 'LastName': 'rSzRp1Y9'}</msg>
<msg timestamp="20191023 09:42:13.323" level="INFO">Storing Contact 0034F00000SaS3KQAV to session records</msg>
<msg timestamp="20191023 09:42:13.324" level="INFO">${contact_id} = 0034F00000SaS3KQAV</msg>
<status status="PASS" starttime="20191023 09:42:13.018" endtime="20191023 09:42:13.324"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>${contact_id}</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:13.324" level="INFO">Getting Contact with Id 0034F00000SaS3KQAV</msg>
<msg timestamp="20191023 09:42:13.477" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3KQAV'} | Id=0034F00000SaS3KQAV | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=rSzRp1Y9...</msg>
<status status="PASS" starttime="20191023 09:42:13.324" endtime="20191023 09:42:13.478"></status>
</kw>
<msg timestamp="20191023 09:42:13.478" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3KQAV'} | Id=0034F00000SaS3KQAV | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=rSzRp1Y9...</msg>
<status status="PASS" starttime="20191023 09:42:13.015" endtime="20191023 09:42:13.478"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:13.479" level="INFO">${new_last_name} = hC0xjHaq</msg>
<status status="PASS" starttime="20191023 09:42:13.479" endtime="20191023 09:42:13.479"></status>
</kw>
<kw name="Salesforce Update" library="cumulusci.robotframework.Salesforce">
<doc>Updates a Salesforce object by id and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>&amp;{contact}[Id]</arg>
<arg>LastName=${new_last_name}</arg>
</arguments>
<msg timestamp="20191023 09:42:13.480" level="INFO">Updating Contact 0034F00000SaS3KQAV with values {'LastName': 'hC0xjHaq'}</msg>
<status status="PASS" starttime="20191023 09:42:13.479" endtime="20191023 09:42:14.181"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>&amp;{contact}[Id]</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:14.182" level="INFO">Getting Contact with Id 0034F00000SaS3KQAV</msg>
<msg timestamp="20191023 09:42:14.341" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3KQAV'} | Id=0034F00000SaS3KQAV | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=hC0xjHaq...</msg>
<status status="PASS" starttime="20191023 09:42:14.182" endtime="20191023 09:42:14.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[LastName]</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:14.341" endtime="20191023 09:42:14.342"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:07.011" endtime="20191023 09:42:14.342" critical="yes"></status>
</test>
<test id="s1-s2-s1-t4" name="Salesforce Query">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:20.345" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:14.343" endtime="20191023 09:42:20.346"></status>
</kw>
<kw name="Create Contact">
<assign>
<var>&amp;{new_contact}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20191023 09:42:20.347" level="INFO">${first_name} = jjiIiwqf</msg>
<status status="PASS" starttime="20191023 09:42:20.346" endtime="20191023 09:42:20.347"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${last_name}</var>
</assign>
<msg timestamp="20191023 09:42:20.347" level="INFO">${last_name} = U0Nh4qo8</msg>
<status status="PASS" starttime="20191023 09:42:20.347" endtime="20191023 09:42:20.347"></status>
</kw>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=${first_name}</arg>
<arg>LastName=${last_name}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:20.347" level="INFO">Inserting Contact with values {'FirstName': 'jjiIiwqf', 'LastName': 'U0Nh4qo8'}</msg>
<msg timestamp="20191023 09:42:20.640" level="INFO">Storing Contact 0034F00000SaS3oQAF to session records</msg>
<msg timestamp="20191023 09:42:20.640" level="INFO">${contact_id} = 0034F00000SaS3oQAF</msg>
<status status="PASS" starttime="20191023 09:42:20.347" endtime="20191023 09:42:20.640"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>${contact_id}</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:20.641" level="INFO">Getting Contact with Id 0034F00000SaS3oQAF</msg>
<msg timestamp="20191023 09:42:20.883" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3oQAF'} | Id=0034F00000SaS3oQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=U0Nh4qo8...</msg>
<status status="PASS" starttime="20191023 09:42:20.640" endtime="20191023 09:42:20.883"></status>
</kw>
<msg timestamp="20191023 09:42:20.884" level="INFO">&amp;{new_contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3oQAF'} | Id=0034F00000SaS3oQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=U0Nh4qo8...</msg>
<status status="PASS" starttime="20191023 09:42:20.346" endtime="20191023 09:42:20.884"></status>
</kw>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>select=Id,FirstName,LastName</arg>
<arg>Id=&amp;{new_contact}[Id]</arg>
</arguments>
<assign>
<var>@{records}</var>
</assign>
<msg timestamp="20191023 09:42:20.885" level="INFO">Running SOQL Query: SELECT Id,FirstName,LastName FROM Contact WHERE Id = '0034F00000SaS3oQAF'</msg>
<msg timestamp="20191023 09:42:21.041" level="INFO">@{records} = [ OrderedDict([('attributes', OrderedDict([('type', 'Contact'), ('url', '/services/data/v46.0/sobjects/Contact/0034F00000SaS3oQAF')])), ('Id', '0034F00000SaS3oQAF'), ('FirstName', 'jjiIiwqf'), ('LastN...</msg>
<status status="PASS" starttime="20191023 09:42:20.885" endtime="20191023 09:42:21.041"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${records}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:21.042" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3oQAF'} | Id=0034F00000SaS3oQAF | FirstName=jjiIiwqf | LastName=U0Nh4qo8 }</msg>
<status status="PASS" starttime="20191023 09:42:21.042" endtime="20191023 09:42:21.042"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[Id]</arg>
<arg>&amp;{new_contact}[Id]</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:21.043" endtime="20191023 09:42:21.043"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[FirstName]</arg>
<arg>&amp;{new_contact}[FirstName]</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:21.044" endtime="20191023 09:42:21.044"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[LastName]</arg>
<arg>&amp;{new_contact}[LastName]</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:21.044" endtime="20191023 09:42:21.045"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:14.343" endtime="20191023 09:42:21.045" critical="yes"></status>
</test>
<test id="s1-s2-s1-t5" name="SOQL Query">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:27.047" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:21.046" endtime="20191023 09:42:27.047"></status>
</kw>
<kw name="Create Contact">
<assign>
<var>&amp;{new_contact}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${first_name}</var>
</assign>
<msg timestamp="20191023 09:42:27.050" level="INFO">${first_name} = q9zyi6aE</msg>
<status status="PASS" starttime="20191023 09:42:27.049" endtime="20191023 09:42:27.050"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${last_name}</var>
</assign>
<msg timestamp="20191023 09:42:27.051" level="INFO">${last_name} = DtOvNp4U</msg>
<status status="PASS" starttime="20191023 09:42:27.051" endtime="20191023 09:42:27.051"></status>
</kw>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=${first_name}</arg>
<arg>LastName=${last_name}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:27.052" level="INFO">Inserting Contact with values {'FirstName': 'q9zyi6aE', 'LastName': 'DtOvNp4U'}</msg>
<msg timestamp="20191023 09:42:27.348" level="INFO">Storing Contact 0034F00000SaS3yQAF to session records</msg>
<msg timestamp="20191023 09:42:27.348" level="INFO">${contact_id} = 0034F00000SaS3yQAF</msg>
<status status="PASS" starttime="20191023 09:42:27.051" endtime="20191023 09:42:27.348"></status>
</kw>
<kw name="Salesforce Get" library="cumulusci.robotframework.Salesforce">
<doc>Gets a Salesforce object by id and returns the dict result</doc>
<arguments>
<arg>Contact</arg>
<arg>${contact_id}</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:27.349" level="INFO">Getting Contact with Id 0034F00000SaS3yQAF</msg>
<msg timestamp="20191023 09:42:27.602" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'} | Id=0034F00000SaS3yQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=DtOvNp4U...</msg>
<status status="PASS" starttime="20191023 09:42:27.349" endtime="20191023 09:42:27.602"></status>
</kw>
<msg timestamp="20191023 09:42:27.603" level="INFO">&amp;{new_contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'} | Id=0034F00000SaS3yQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=DtOvNp4U...</msg>
<status status="PASS" starttime="20191023 09:42:27.048" endtime="20191023 09:42:27.603"></status>
</kw>
<kw name="Soql Query" library="cumulusci.robotframework.Salesforce">
<doc>Runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Select Id, FirstName, LastName from Contact WHERE Id = '&amp;{new_contact}[Id]'</arg>
</arguments>
<assign>
<var>&amp;{result}</var>
</assign>
<msg timestamp="20191023 09:42:27.603" level="INFO">Running SOQL Query: Select Id, FirstName, LastName from Contact WHERE Id = '0034F00000SaS3yQAF'</msg>
<msg timestamp="20191023 09:42:27.833" level="INFO">&amp;{result} = { totalSize=1 | done=True | records=[{'attributes': {'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'}, 'Id': '0034F00000SaS3yQAF', 'FirstName': 'q9zyi6aE', 'LastNa...</msg>
<status status="PASS" starttime="20191023 09:42:27.603" endtime="20191023 09:42:27.833"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result}</arg>
<arg>records</arg>
</arguments>
<assign>
<var>@{records}</var>
</assign>
<msg timestamp="20191023 09:42:27.834" level="INFO">@{records} = [ {'attributes': {'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'}, 'Id': '0034F00000SaS3yQAF', 'FirstName': 'q9zyi6aE', 'LastName': 'DtOvNp4U'} ]</msg>
<status status="PASS" starttime="20191023 09:42:27.834" endtime="20191023 09:42:27.834"></status>
</kw>
<kw name="Log Variables" library="BuiltIn">
<doc>Logs all variables in the current scope with given log level.</doc>
<msg timestamp="20191023 09:42:27.835" level="INFO">${/} = /</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${:} = :</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${\n} = 
</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${BROWSER} = chrome</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${CHROME_BINARY} = </msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${DEBUG} = False</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${DEBUG_FILE} = NONE</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${DEFAULT BROWSER SIZE} = 1280x1024</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${EXECDIR} = /Users/pprescod/code/CumulusCI</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${False} = False</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${IMPLICIT_WAIT} = 7.0</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${INITIAL_TIMEOUT} = 180.0</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${LOCATION STRATEGIES INITIALIZED} = False</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${LOG_FILE} = /Users/pprescod/code/CumulusCI/log.html</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">${LOG_LEVEL} = INFO</msg>
<msg timestamp="20191023 09:42:27.835" level="INFO">&amp;{new_contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'} | Id=0034F00000SaS3yQAF | IsDeleted=False | MasterRecordId=None | AccountId=None | LastName=DtOvNp4U | FirstName=q9zyi6aE | Salutation=None | Name=q9zyi6aE DtOvNp4U | OtherStreet=None | OtherCity=None | OtherState=None | OtherPostalCode=None | OtherCountry=None | OtherLatitude=None | OtherLongitude=None | OtherGeocodeAccuracy=None | OtherAddress=None | MailingStreet=None | MailingCity=None | MailingState=None | MailingPostalCode=None | MailingCountry=None | MailingLatitude=None | MailingLongitude=None | MailingGeocodeAccuracy=None | MailingAddress=None | Phone=None | Fax=None | MobilePhone=None | HomePhone=None | OtherPhone=None | AssistantPhone=None | ReportsToId=None | Email=None | Title=None | Department=None | AssistantName=None | LeadSource=None | Birthdate=None | Description=None | OwnerId=0054F000001wQZ5QAM | CreatedDate=2019-10-23T16:42:27.000+0000 | CreatedById=0054F000001wQZ5QAM | LastModifiedDate=2019-10-23T16:42:27.000+0000 | LastModifiedById=0054F000001wQZ5QAM | SystemModstamp=2019-10-23T16:42:27.000+0000 | LastActivityDate=None | LastCURequestDate=None | LastCUUpdateDate=None | LastViewedDate=2019-10-23T16:42:27.000+0000 | LastReferencedDate=2019-10-23T16:42:27.000+0000 | EmailBouncedReason=None | EmailBouncedDate=None | IsEmailBounced=False | PhotoUrl=/services/images/photo/0034F00000SaS3yQAF | Jigsaw=None | JigsawContactId=None | CleanStatus=Pending | IndividualId=None }</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${None} = None</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${null} = None</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${org} = dev</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${OUTPUT_DIR} = /Users/pprescod/code/CumulusCI</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${OUTPUT_FILE} = /Users/pprescod/code/CumulusCI/output.xml</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${PREV_TEST_MESSAGE} = </msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${PREV_TEST_NAME} = Salesforce Query</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${PREV_TEST_STATUS} = PASS</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">@{records} = [ {'attributes': {'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'}, 'Id': '0034F00000SaS3yQAF', 'FirstName': 'q9zyi6aE', 'LastName': 'DtOvNp4U'} ]</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${REPORT_FILE} = /Users/pprescod/code/CumulusCI/report.html</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">&amp;{result} = { totalSize=1 | done=True | records=[{'attributes': {'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'}, 'Id': '0034F00000SaS3yQAF', 'FirstName': 'q9zyi6aE', 'LastName': 'DtOvNp4U'}] }</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${SPACE} =  </msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${SUITE_DOCUMENTATION} = </msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">&amp;{SUITE_METADATA} = { }</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${SUITE_NAME} = Tests.Salesforce.Api</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${SUITE_SOURCE} = /Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/api.robot</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${TEMPDIR} = /var/folders/q4/9bjz2lm10nsfv2z3l_pqjtt40000gq/T</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${TEST_DOCUMENTATION} = </msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${TEST_NAME} = SOQL Query</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">@{TEST_TAGS} = [ api ]</msg>
<msg timestamp="20191023 09:42:27.836" level="INFO">${TIMEOUT} = 30.0</msg>
<msg timestamp="20191023 09:42:27.837" level="INFO">${True} = True</msg>
<status status="PASS" starttime="20191023 09:42:27.834" endtime="20191023 09:42:27.837"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${records}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>&amp;{contact}</var>
</assign>
<msg timestamp="20191023 09:42:27.837" level="INFO">&amp;{contact} = { attributes={'type': 'Contact', 'url': '/services/data/v46.0/sobjects/Contact/0034F00000SaS3yQAF'} | Id=0034F00000SaS3yQAF | FirstName=q9zyi6aE | LastName=DtOvNp4U }</msg>
<status status="PASS" starttime="20191023 09:42:27.837" endtime="20191023 09:42:27.837"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{result}[totalSize]</arg>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:27.838" endtime="20191023 09:42:27.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[FirstName]</arg>
<arg>&amp;{new_contact}[FirstName]</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:27.838" endtime="20191023 09:42:27.839"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{contact}[LastName]</arg>
<arg>&amp;{new_contact}[LastName]</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:27.839" endtime="20191023 09:42:27.839"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:21.046" endtime="20191023 09:42:27.840" critical="yes"></status>
</test>
<test id="s1-s2-s1-t6" name="Salesforce Delete Session Records">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:33.843" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:27.842" endtime="20191023 09:42:33.844"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random string}</var>
</assign>
<msg timestamp="20191023 09:42:33.845" level="INFO">${random string} = nQpY3L2D</msg>
<status status="PASS" starttime="20191023 09:42:33.844" endtime="20191023 09:42:33.845"></status>
</kw>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>@{query}</var>
</assign>
<msg timestamp="20191023 09:42:33.846" level="INFO">Running SOQL Query: SELECT Id FROM Contact WHERE LastName = 'nQpY3L2D'</msg>
<msg timestamp="20191023 09:42:34.069" level="INFO">@{query} = [ ]</msg>
<status status="PASS" starttime="20191023 09:42:33.845" endtime="20191023 09:42:34.069"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${query}</arg>
<arg>0</arg>
<arg>Expected the query to return no records, but it returned ${query}</arg>
</arguments>
<msg timestamp="20191023 09:42:34.070" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191023 09:42:34.069" endtime="20191023 09:42:34.070"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=User-${i}</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:34.071" level="INFO">Inserting Contact with values {'FirstName': 'User-0', 'LastName': 'nQpY3L2D'}</msg>
<msg timestamp="20191023 09:42:34.831" level="INFO">Storing Contact 0034F00000SaS48QAF to session records</msg>
<msg timestamp="20191023 09:42:34.831" level="INFO">${contact_id} = 0034F00000SaS48QAF</msg>
<status status="PASS" starttime="20191023 09:42:34.071" endtime="20191023 09:42:34.831"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:34.070" endtime="20191023 09:42:34.831"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=User-${i}</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:34.832" level="INFO">Inserting Contact with values {'FirstName': 'User-1', 'LastName': 'nQpY3L2D'}</msg>
<msg timestamp="20191023 09:42:35.118" level="INFO">Storing Contact 0034F00000SaS4DQAV to session records</msg>
<msg timestamp="20191023 09:42:35.118" level="INFO">${contact_id} = 0034F00000SaS4DQAV</msg>
<status status="PASS" starttime="20191023 09:42:34.832" endtime="20191023 09:42:35.118"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:34.831" endtime="20191023 09:42:35.119"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=User-${i}</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:35.119" level="INFO">Inserting Contact with values {'FirstName': 'User-2', 'LastName': 'nQpY3L2D'}</msg>
<msg timestamp="20191023 09:42:35.447" level="INFO">Storing Contact 0034F00000SaS4IQAV to session records</msg>
<msg timestamp="20191023 09:42:35.447" level="INFO">${contact_id} = 0034F00000SaS4IQAV</msg>
<status status="PASS" starttime="20191023 09:42:35.119" endtime="20191023 09:42:35.447"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:35.119" endtime="20191023 09:42:35.447"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=User-${i}</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:35.448" level="INFO">Inserting Contact with values {'FirstName': 'User-3', 'LastName': 'nQpY3L2D'}</msg>
<msg timestamp="20191023 09:42:35.800" level="INFO">Storing Contact 0034F00000SaS4NQAV to session records</msg>
<msg timestamp="20191023 09:42:35.800" level="INFO">${contact_id} = 0034F00000SaS4NQAV</msg>
<status status="PASS" starttime="20191023 09:42:35.448" endtime="20191023 09:42:35.800"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:35.447" endtime="20191023 09:42:35.800"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=User-${i}</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>${contact_id}</var>
</assign>
<msg timestamp="20191023 09:42:35.801" level="INFO">Inserting Contact with values {'FirstName': 'User-4', 'LastName': 'nQpY3L2D'}</msg>
<msg timestamp="20191023 09:42:36.452" level="INFO">Storing Contact 0034F00000SaS4SQAV to session records</msg>
<msg timestamp="20191023 09:42:36.452" level="INFO">${contact_id} = 0034F00000SaS4SQAV</msg>
<status status="PASS" starttime="20191023 09:42:35.801" endtime="20191023 09:42:36.452"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:35.800" endtime="20191023 09:42:36.452"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:34.070" endtime="20191023 09:42:36.452"></status>
</kw>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>@{query}</var>
</assign>
<msg timestamp="20191023 09:42:36.453" level="INFO">Running SOQL Query: SELECT Id FROM Contact WHERE LastName = 'nQpY3L2D'</msg>
<msg timestamp="20191023 09:42:36.602" level="INFO">@{query} = [ OrderedDict([('attributes', OrderedDict([('type', 'Contact'), ('url', '/services/data/v46.0/sobjects/Contact/0034F00000SaS48QAF')])), ('Id', '0034F00000SaS48QAF')]) | OrderedDict([('attributes', Ord...</msg>
<status status="PASS" starttime="20191023 09:42:36.452" endtime="20191023 09:42:36.602"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${query}</arg>
<arg>5</arg>
<arg>Expected the query to return five records, but it returned ${query}</arg>
</arguments>
<msg timestamp="20191023 09:42:36.604" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20191023 09:42:36.602" endtime="20191023 09:42:36.604"></status>
</kw>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:42:36.605" level="INFO">Deleting 9 records</msg>
<msg timestamp="20191023 09:42:36.605" level="INFO">  Deleting Contact 0034F00000SaS4SQAV</msg>
<msg timestamp="20191023 09:42:36.605" level="INFO">Deleting Contact with Id 0034F00000SaS4SQAV</msg>
<msg timestamp="20191023 09:42:37.327" level="INFO">  Deleting Contact 0034F00000SaS4NQAV</msg>
<msg timestamp="20191023 09:42:37.327" level="INFO">Deleting Contact with Id 0034F00000SaS4NQAV</msg>
<msg timestamp="20191023 09:42:37.717" level="INFO">  Deleting Contact 0034F00000SaS4IQAV</msg>
<msg timestamp="20191023 09:42:37.717" level="INFO">Deleting Contact with Id 0034F00000SaS4IQAV</msg>
<msg timestamp="20191023 09:42:38.104" level="INFO">  Deleting Contact 0034F00000SaS4DQAV</msg>
<msg timestamp="20191023 09:42:38.104" level="INFO">Deleting Contact with Id 0034F00000SaS4DQAV</msg>
<msg timestamp="20191023 09:42:38.573" level="INFO">  Deleting Contact 0034F00000SaS48QAF</msg>
<msg timestamp="20191023 09:42:38.573" level="INFO">Deleting Contact with Id 0034F00000SaS48QAF</msg>
<msg timestamp="20191023 09:42:38.987" level="INFO">  Deleting Contact 0034F00000SaS3yQAF</msg>
<msg timestamp="20191023 09:42:38.987" level="INFO">Deleting Contact with Id 0034F00000SaS3yQAF</msg>
<msg timestamp="20191023 09:42:39.334" level="INFO">  Deleting Contact 0034F00000SaS3oQAF</msg>
<msg timestamp="20191023 09:42:39.334" level="INFO">Deleting Contact with Id 0034F00000SaS3oQAF</msg>
<msg timestamp="20191023 09:42:40.591" level="INFO">  Deleting Contact 0034F00000SaS3KQAV</msg>
<msg timestamp="20191023 09:42:40.591" level="INFO">Deleting Contact with Id 0034F00000SaS3KQAV</msg>
<msg timestamp="20191023 09:42:41.201" level="INFO">  Deleting Contact 0034F00000SaS2lQAF</msg>
<msg timestamp="20191023 09:42:41.201" level="INFO">Deleting Contact with Id 0034F00000SaS2lQAF</msg>
<status status="PASS" starttime="20191023 09:42:36.605" endtime="20191023 09:42:41.564"></status>
</kw>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>LastName=${random string}</arg>
</arguments>
<assign>
<var>@{query}</var>
</assign>
<msg timestamp="20191023 09:42:41.565" level="INFO">Running SOQL Query: SELECT Id FROM Contact WHERE LastName = 'nQpY3L2D'</msg>
<msg timestamp="20191023 09:42:41.822" level="INFO">@{query} = [ ]</msg>
<status status="PASS" starttime="20191023 09:42:41.564" endtime="20191023 09:42:41.823"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${query}</arg>
<arg>0</arg>
<arg>Expected the query to return 0 records, but it returned ${query}</arg>
</arguments>
<msg timestamp="20191023 09:42:41.824" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191023 09:42:41.823" endtime="20191023 09:42:41.824"></status>
</kw>
<doc>Verify that 'Delete Session Records' deletes all session records
This verifies that we fixed a bug which resulted in some records
not being deleted.</doc>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:27.840" endtime="20191023 09:42:41.825" critical="yes"></status>
</test>
<test id="s1-s2-s1-t7" name="Collection API Test">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:47.838" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:41.829" endtime="20191023 09:42:47.838"></status>
</kw>
<kw name="Generate Test Data" library="cumulusci.robotframework.Salesforce">
<doc>Generate test data dictionaries. Usually used for later insertion into SF.</doc>
<arguments>
<arg>Contact</arg>
<arg>20</arg>
<arg>FirstName=User {{number}}</arg>
<arg>LastName={{fake.last_name}}</arg>
</arguments>
<assign>
<var>@{objects}</var>
</assign>
<msg timestamp="20191023 09:42:47.887" level="INFO">@{objects} = [ {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Murphy'} | {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': 'Griffin'} | {'attributes': {'type': 'Contac...</msg>
<status status="PASS" starttime="20191023 09:42:47.838" endtime="20191023 09:42:47.887"></status>
</kw>
<kw name="Salesforce Collection Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts up to 200 records that were created with Generate Test Data.
The 200 record limit is enforced by the Salesforce APIs</doc>
<arguments>
<arg>${objects}</arg>
</arguments>
<assign>
<var>@{records}</var>
</assign>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4XQAV to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4YQAV to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4ZQAV to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4aQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4bQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4cQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4dQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4eQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4fQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4gQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4hQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4iQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4jQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4kQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4lQAF to session records</msg>
<msg timestamp="20191023 09:42:49.052" level="INFO">Storing Contact 0034F00000SaS4mQAF to session records</msg>
<msg timestamp="20191023 09:42:49.053" level="INFO">Storing Contact 0034F00000SaS4nQAF to session records</msg>
<msg timestamp="20191023 09:42:49.053" level="INFO">Storing Contact 0034F00000SaS4oQAF to session records</msg>
<msg timestamp="20191023 09:42:49.053" level="INFO">Storing Contact 0034F00000SaS4pQAF to session records</msg>
<msg timestamp="20191023 09:42:49.053" level="INFO">Storing Contact 0034F00000SaS4qQAF to session records</msg>
<msg timestamp="20191023 09:42:49.053" level="INFO">@{records} = [ {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Murphy', 'id': '0034F00000SaS4XQAV', ('status',): OrderedDict([('id', '0034F00000SaS4XQAV'), ('success', True), ('errors', [])...</msg>
<status status="PASS" starttime="20191023 09:42:47.888" endtime="20191023 09:42:49.053"></status>
</kw>
<kw name="${record} IN [ @{records} ]" type="for">
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Murphy', 'id': '0034F00000SaS4XQAV', ('status',): OrderedDict([('id', '0034F00000SaS4XQAV'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.054" level="INFO">${new_last_name} = V64kMv9d</msg>
<status status="PASS" starttime="20191023 09:42:49.054" endtime="20191023 09:42:49.054"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.054" endtime="20191023 09:42:49.054"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.053" endtime="20191023 09:42:49.054"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': 'Griffin', 'id': '0034F00000SaS4YQAV', ('status',): OrderedDict([('id', '0034F00000SaS4YQAV'), ('success', True), ('errors', [])]..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.060" level="INFO">${new_last_name} = eaL68aeU</msg>
<status status="PASS" starttime="20191023 09:42:49.055" endtime="20191023 09:42:49.060"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.061" endtime="20191023 09:42:49.061"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.054" endtime="20191023 09:42:49.061"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 2', 'LastName': 'Silva', 'id': '0034F00000SaS4ZQAV', ('status',): OrderedDict([('id', '0034F00000SaS4ZQAV'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.062" level="INFO">${new_last_name} = ZNn0wA2j</msg>
<status status="PASS" starttime="20191023 09:42:49.061" endtime="20191023 09:42:49.062"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.062" endtime="20191023 09:42:49.062"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.061" endtime="20191023 09:42:49.062"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 3', 'LastName': 'Martinez', 'id': '0034F00000SaS4aQAF', ('status',): OrderedDict([('id', '0034F00000SaS4aQAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.062" level="INFO">${new_last_name} = wYdA4CNM</msg>
<status status="PASS" starttime="20191023 09:42:49.062" endtime="20191023 09:42:49.062"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.062" endtime="20191023 09:42:49.063"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.062" endtime="20191023 09:42:49.063"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 4', 'LastName': 'Dunn', 'id': '0034F00000SaS4bQAF', ('status',): OrderedDict([('id', '0034F00000SaS4bQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.063" level="INFO">${new_last_name} = QqOquSfG</msg>
<status status="PASS" starttime="20191023 09:42:49.063" endtime="20191023 09:42:49.063"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.063" endtime="20191023 09:42:49.063"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.063" endtime="20191023 09:42:49.064"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 5', 'LastName': 'Chase', 'id': '0034F00000SaS4cQAF', ('status',): OrderedDict([('id', '0034F00000SaS4cQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.064" level="INFO">${new_last_name} = 5aRsoLZn</msg>
<status status="PASS" starttime="20191023 09:42:49.064" endtime="20191023 09:42:49.064"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.065" endtime="20191023 09:42:49.065"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.064" endtime="20191023 09:42:49.065"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 6', 'LastName': 'Miller', 'id': '0034F00000SaS4dQAF', ('status',): OrderedDict([('id', '0034F00000SaS4dQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.066" level="INFO">${new_last_name} = N9hqDM17</msg>
<status status="PASS" starttime="20191023 09:42:49.065" endtime="20191023 09:42:49.066"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.066" endtime="20191023 09:42:49.067"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.065" endtime="20191023 09:42:49.067"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 7', 'LastName': 'Wagner', 'id': '0034F00000SaS4eQAF', ('status',): OrderedDict([('id', '0034F00000SaS4eQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.067" level="INFO">${new_last_name} = qdYpQ3dG</msg>
<status status="PASS" starttime="20191023 09:42:49.067" endtime="20191023 09:42:49.068"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.068" endtime="20191023 09:42:49.068"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.067" endtime="20191023 09:42:49.068"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 8', 'LastName': 'Hansen', 'id': '0034F00000SaS4fQAF', ('status',): OrderedDict([('id', '0034F00000SaS4fQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.069" level="INFO">${new_last_name} = vfFR8WZp</msg>
<status status="PASS" starttime="20191023 09:42:49.069" endtime="20191023 09:42:49.069"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.069" endtime="20191023 09:42:49.069"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.068" endtime="20191023 09:42:49.070"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 9', 'LastName': 'Marks', 'id': '0034F00000SaS4gQAF', ('status',): OrderedDict([('id', '0034F00000SaS4gQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.070" level="INFO">${new_last_name} = hMwUn0TH</msg>
<status status="PASS" starttime="20191023 09:42:49.070" endtime="20191023 09:42:49.070"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.070" endtime="20191023 09:42:49.071"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.070" endtime="20191023 09:42:49.071"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 10', 'LastName': 'Peck', 'id': '0034F00000SaS4hQAF', ('status',): OrderedDict([('id', '0034F00000SaS4hQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.071" level="INFO">${new_last_name} = UVR0oysz</msg>
<status status="PASS" starttime="20191023 09:42:49.071" endtime="20191023 09:42:49.071"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.072" endtime="20191023 09:42:49.072"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.071" endtime="20191023 09:42:49.072"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 11', 'LastName': 'Bennett', 'id': '0034F00000SaS4iQAF', ('status',): OrderedDict([('id', '0034F00000SaS4iQAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.073" level="INFO">${new_last_name} = X8EMiOGT</msg>
<status status="PASS" starttime="20191023 09:42:49.072" endtime="20191023 09:42:49.073"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.073" endtime="20191023 09:42:49.073"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.072" endtime="20191023 09:42:49.073"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 12', 'LastName': 'Lopez', 'id': '0034F00000SaS4jQAF', ('status',): OrderedDict([('id', '0034F00000SaS4jQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.074" level="INFO">${new_last_name} = 2SyU8Ktf</msg>
<status status="PASS" starttime="20191023 09:42:49.073" endtime="20191023 09:42:49.074"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.074" endtime="20191023 09:42:49.074"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.073" endtime="20191023 09:42:49.074"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 13', 'LastName': 'Mitchell', 'id': '0034F00000SaS4kQAF', ('status',): OrderedDict([('id', '0034F00000SaS4kQAF'), ('success', True), ('errors', []..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.075" level="INFO">${new_last_name} = dF6tKIKP</msg>
<status status="PASS" starttime="20191023 09:42:49.074" endtime="20191023 09:42:49.075"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.075" endtime="20191023 09:42:49.075"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.074" endtime="20191023 09:42:49.075"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 14', 'LastName': 'Goodman', 'id': '0034F00000SaS4lQAF', ('status',): OrderedDict([('id', '0034F00000SaS4lQAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.076" level="INFO">${new_last_name} = PpNnPDTt</msg>
<status status="PASS" starttime="20191023 09:42:49.075" endtime="20191023 09:42:49.076"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.076" endtime="20191023 09:42:49.077"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.075" endtime="20191023 09:42:49.077"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 15', 'LastName': 'Boyd', 'id': '0034F00000SaS4mQAF', ('status',): OrderedDict([('id', '0034F00000SaS4mQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.078" level="INFO">${new_last_name} = tLRSCvkG</msg>
<status status="PASS" starttime="20191023 09:42:49.077" endtime="20191023 09:42:49.078"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.078" endtime="20191023 09:42:49.078"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.077" endtime="20191023 09:42:49.079"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 16', 'LastName': 'Davis', 'id': '0034F00000SaS4nQAF', ('status',): OrderedDict([('id', '0034F00000SaS4nQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.079" level="INFO">${new_last_name} = GVNDvj57</msg>
<status status="PASS" starttime="20191023 09:42:49.079" endtime="20191023 09:42:49.079"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.079" endtime="20191023 09:42:49.080"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.079" endtime="20191023 09:42:49.080"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 17', 'LastName': 'Lawrence', 'id': '0034F00000SaS4oQAF', ('status',): OrderedDict([('id', '0034F00000SaS4oQAF'), ('success', True), ('errors', []..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.081" level="INFO">${new_last_name} = Pq3iap2e</msg>
<status status="PASS" starttime="20191023 09:42:49.081" endtime="20191023 09:42:49.081"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.082" endtime="20191023 09:42:49.082"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.080" endtime="20191023 09:42:49.082"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 18', 'LastName': 'Jones', 'id': '0034F00000SaS4pQAF', ('status',): OrderedDict([('id', '0034F00000SaS4pQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.084" level="INFO">${new_last_name} = DKDzEqXS</msg>
<status status="PASS" starttime="20191023 09:42:49.083" endtime="20191023 09:42:49.085"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.085" endtime="20191023 09:42:49.085"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.082" endtime="20191023 09:42:49.085"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 19', 'LastName': 'Foster', 'id': '0034F00000SaS4qQAF', ('status',): OrderedDict([('id', '0034F00000SaS4qQAF'), ('success', True), ('errors', [])]..." type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${new_last_name}</var>
</assign>
<msg timestamp="20191023 09:42:49.090" level="INFO">${new_last_name} = ezFvARbq</msg>
<status status="PASS" starttime="20191023 09:42:49.085" endtime="20191023 09:42:49.090"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>LastName</arg>
<arg>${new_last_name}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.094" endtime="20191023 09:42:49.095"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.085" endtime="20191023 09:42:49.095"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:49.053" endtime="20191023 09:42:49.095"></status>
</kw>
<kw name="Salesforce Collection Update" library="cumulusci.robotframework.Salesforce">
<doc>Updates up to 200 records described as Robot/Python dictionaries</doc>
<arguments>
<arg>${records}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:49.095" endtime="20191023 09:42:49.735"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:41.826" endtime="20191023 09:42:49.736" critical="yes"></status>
</test>
<test id="s1-s2-s1-t8" name="Collection API Errors Test">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191023 09:42:55.739" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20191023 09:42:49.738" endtime="20191023 09:42:55.739"></status>
</kw>
<kw name="Generate Test Data" library="cumulusci.robotframework.Salesforce">
<doc>Generate test data dictionaries. Usually used for later insertion into SF.</doc>
<arguments>
<arg>Contact</arg>
<arg>20</arg>
<arg>FirstName=User {{number}}</arg>
<arg>LastName={{fake.last_name}}</arg>
<arg>Xyzzy=qwertz</arg>
</arguments>
<assign>
<var>@{objects}</var>
</assign>
<msg timestamp="20191023 09:42:55.776" level="INFO">@{objects} = [ {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Bates', 'Xyzzy': 'qwertz'} | {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': 'Raymond', 'Xyzzy': 'qwert...</msg>
<status status="PASS" starttime="20191023 09:42:55.740" endtime="20191023 09:42:55.776"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>SalesforceMalformedRequest*</arg>
<arg>Salesforce Collection Insert</arg>
<arg>${objects}</arg>
</arguments>
<kw name="Salesforce Collection Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts up to 200 records that were created with Generate Test Data.
The 200 record limit is enforced by the Salesforce APIs</doc>
<arguments>
<arg>${objects}</arg>
</arguments>
<msg timestamp="20191023 09:42:55.938" level="FAIL">SalesforceMalformedRequest: Malformed request https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/services/data/v46.0/composite/sobjects. Response content: [{'message': "No such column 'Xyzzy' on sobject of type Contact", 'errorCode': 'INVALID_FIELD'}]</msg>
<status status="FAIL" starttime="20191023 09:42:55.777" endtime="20191023 09:42:55.938"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:55.777" endtime="20191023 09:42:55.939"></status>
</kw>
<kw name="Generate Test Data" library="cumulusci.robotframework.Salesforce">
<doc>Generate test data dictionaries. Usually used for later insertion into SF.</doc>
<arguments>
<arg>Contact</arg>
<arg>20</arg>
<arg>FirstName=User {{number}}</arg>
<arg>LastName=</arg>
</arguments>
<assign>
<var>@{objects}</var>
</assign>
<msg timestamp="20191023 09:42:55.958" level="INFO">@{objects} = [ {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': ''} | {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': ''} | {'attributes': {'type': 'Contact'}, 'FirstNa...</msg>
<status status="PASS" starttime="20191023 09:42:55.940" endtime="20191023 09:42:55.958"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>Error*</arg>
<arg>Salesforce Collection Insert</arg>
<arg>${objects}</arg>
</arguments>
<kw name="Salesforce Collection Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts up to 200 records that were created with Generate Test Data.
The 200 record limit is enforced by the Salesforce APIs</doc>
<arguments>
<arg>${objects}</arg>
</arguments>
<msg timestamp="20191023 09:42:56.209" level="FAIL">Error on Object 0: OrderedDict([('success', False), ('errors', [OrderedDict([('statusCode', 'REQUIRED_FIELD_MISSING'), ('message', 'Required fields are missing: [LastName]'), ('fields', ['LastName'])])])]) : {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': ''}</msg>
<status status="FAIL" starttime="20191023 09:42:55.959" endtime="20191023 09:42:56.209"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:55.958" endtime="20191023 09:42:56.209"></status>
</kw>
<kw name="Generate Test Data" library="cumulusci.robotframework.Salesforce">
<doc>Generate test data dictionaries. Usually used for later insertion into SF.</doc>
<arguments>
<arg>Contact</arg>
<arg>20</arg>
<arg>FirstName=User {{number}}</arg>
<arg>LastName={{fake.last_name}}</arg>
</arguments>
<assign>
<var>@{objects}</var>
</assign>
<msg timestamp="20191023 09:42:56.233" level="INFO">@{objects} = [ {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Gilbert'} | {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': 'Richardson'} | {'attributes': {'type': 'Co...</msg>
<status status="PASS" starttime="20191023 09:42:56.209" endtime="20191023 09:42:56.233"></status>
</kw>
<kw name="Salesforce Collection Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts up to 200 records that were created with Generate Test Data.
The 200 record limit is enforced by the Salesforce APIs</doc>
<arguments>
<arg>${objects}</arg>
</arguments>
<assign>
<var>${records}</var>
</assign>
<msg timestamp="20191023 09:42:56.710" level="INFO">Storing Contact 0034F00000SaS4rQAF to session records</msg>
<msg timestamp="20191023 09:42:56.710" level="INFO">Storing Contact 0034F00000SaS4sQAF to session records</msg>
<msg timestamp="20191023 09:42:56.710" level="INFO">Storing Contact 0034F00000SaS4tQAF to session records</msg>
<msg timestamp="20191023 09:42:56.710" level="INFO">Storing Contact 0034F00000SaS4uQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS4vQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS4wQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS4xQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS4yQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS4zQAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS50QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS51QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS52QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS53QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS54QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS55QAF to session records</msg>
<msg timestamp="20191023 09:42:56.711" level="INFO">Storing Contact 0034F00000SaS56QAF to session records</msg>
<msg timestamp="20191023 09:42:56.712" level="INFO">Storing Contact 0034F00000SaS57QAF to session records</msg>
<msg timestamp="20191023 09:42:56.712" level="INFO">Storing Contact 0034F00000SaS58QAF to session records</msg>
<msg timestamp="20191023 09:42:56.712" level="INFO">Storing Contact 0034F00000SaS59QAF to session records</msg>
<msg timestamp="20191023 09:42:56.712" level="INFO">Storing Contact 0034F00000SaS5AQAV to session records</msg>
<msg timestamp="20191023 09:42:56.712" level="INFO">${records} = [{'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Gilbert', 'id': '0034F00000SaS4rQAF', ('status',): OrderedDict([('id', '0034F00000SaS4rQAF'), ('success', True), ('errors', [])...</msg>
<status status="PASS" starttime="20191023 09:42:56.233" endtime="20191023 09:42:56.712"></status>
</kw>
<kw name="${record} IN [ @{records} ]" type="for">
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 0', 'LastName': 'Gilbert', 'id': '0034F00000SaS4rQAF', ('status',): OrderedDict([('id', '0034F00000SaS4rQAF'), ('success', True), ('errors', [])]..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.713" endtime="20191023 09:42:56.713"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.713" endtime="20191023 09:42:56.713"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 1', 'LastName': 'Richardson', 'id': '0034F00000SaS4sQAF', ('status',): OrderedDict([('id', '0034F00000SaS4sQAF'), ('success', True), ('errors', [..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.714" endtime="20191023 09:42:56.714"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.713" endtime="20191023 09:42:56.714"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 2', 'LastName': 'Campos', 'id': '0034F00000SaS4tQAF', ('status',): OrderedDict([('id', '0034F00000SaS4tQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.715" endtime="20191023 09:42:56.715"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.714" endtime="20191023 09:42:56.715"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 3', 'LastName': 'Moore', 'id': '0034F00000SaS4uQAF', ('status',): OrderedDict([('id', '0034F00000SaS4uQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.715" endtime="20191023 09:42:56.715"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.715" endtime="20191023 09:42:56.715"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 4', 'LastName': 'Richardson', 'id': '0034F00000SaS4vQAF', ('status',): OrderedDict([('id', '0034F00000SaS4vQAF'), ('success', True), ('errors', [..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.716" endtime="20191023 09:42:56.716"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.716" endtime="20191023 09:42:56.716"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 5', 'LastName': 'Diaz', 'id': '0034F00000SaS4wQAF', ('status',): OrderedDict([('id', '0034F00000SaS4wQAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.716" endtime="20191023 09:42:56.716"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.716" endtime="20191023 09:42:56.716"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 6', 'LastName': 'Larson', 'id': '0034F00000SaS4xQAF', ('status',): OrderedDict([('id', '0034F00000SaS4xQAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.717" endtime="20191023 09:42:56.717"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.716" endtime="20191023 09:42:56.717"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 7', 'LastName': 'Schmidt', 'id': '0034F00000SaS4yQAF', ('status',): OrderedDict([('id', '0034F00000SaS4yQAF'), ('success', True), ('errors', [])]..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.717" endtime="20191023 09:42:56.717"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.717" endtime="20191023 09:42:56.717"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 8', 'LastName': 'Hernandez', 'id': '0034F00000SaS4zQAF', ('status',): OrderedDict([('id', '0034F00000SaS4zQAF'), ('success', True), ('errors', []..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.717" endtime="20191023 09:42:56.718"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.717" endtime="20191023 09:42:56.718"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 9', 'LastName': 'Flores', 'id': '0034F00000SaS50QAF', ('status',): OrderedDict([('id', '0034F00000SaS50QAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.718" endtime="20191023 09:42:56.718"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.718" endtime="20191023 09:42:56.718"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 10', 'LastName': 'Delacruz', 'id': '0034F00000SaS51QAF', ('status',): OrderedDict([('id', '0034F00000SaS51QAF'), ('success', True), ('errors', []..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.718" endtime="20191023 09:42:56.719"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.718" endtime="20191023 09:42:56.719"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 11', 'LastName': 'Smith', 'id': '0034F00000SaS52QAF', ('status',): OrderedDict([('id', '0034F00000SaS52QAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.719" endtime="20191023 09:42:56.719"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.719" endtime="20191023 09:42:56.719"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 12', 'LastName': 'Cohen', 'id': '0034F00000SaS53QAF', ('status',): OrderedDict([('id', '0034F00000SaS53QAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.719" endtime="20191023 09:42:56.719"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.719" endtime="20191023 09:42:56.720"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 13', 'LastName': 'English', 'id': '0034F00000SaS54QAF', ('status',): OrderedDict([('id', '0034F00000SaS54QAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.720" endtime="20191023 09:42:56.720"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.720" endtime="20191023 09:42:56.720"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 14', 'LastName': 'Reid', 'id': '0034F00000SaS55QAF', ('status',): OrderedDict([('id', '0034F00000SaS55QAF'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.720" endtime="20191023 09:42:56.721"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.720" endtime="20191023 09:42:56.721"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 15', 'LastName': 'Salas', 'id': '0034F00000SaS56QAF', ('status',): OrderedDict([('id', '0034F00000SaS56QAF'), ('success', True), ('errors', [])])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.721" endtime="20191023 09:42:56.721"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.721" endtime="20191023 09:42:56.721"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 16', 'LastName': 'Johnson', 'id': '0034F00000SaS57QAF', ('status',): OrderedDict([('id', '0034F00000SaS57QAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.721" endtime="20191023 09:42:56.721"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.721" endtime="20191023 09:42:56.722"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 17', 'LastName': 'Donovan', 'id': '0034F00000SaS58QAF', ('status',): OrderedDict([('id', '0034F00000SaS58QAF'), ('success', True), ('errors', [])..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.722"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.722"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 18', 'LastName': 'Curtis', 'id': '0034F00000SaS59QAF', ('status',): OrderedDict([('id', '0034F00000SaS59QAF'), ('success', True), ('errors', [])]..." type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.722"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.722"></status>
</kw>
<kw name="${record} = {'attributes': {'type': 'Contact'}, 'FirstName': 'User 19', 'LastName': 'Haas', 'id': '0034F00000SaS5AQAV', ('status',): OrderedDict([('id', '0034F00000SaS5AQAV'), ('success', True), ('errors', [])])}" type="foritem">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${record}</arg>
<arg>Age</arg>
<arg>Iron</arg>
</arguments>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.723"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.722" endtime="20191023 09:42:56.723"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.712" endtime="20191023 09:42:56.723"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>SalesforceMalformedRequest*</arg>
<arg>Salesforce Collection Update</arg>
<arg>${objects}</arg>
</arguments>
<kw name="Salesforce Collection Update" library="cumulusci.robotframework.Salesforce">
<doc>Updates up to 200 records described as Robot/Python dictionaries</doc>
<arguments>
<arg>${objects}</arg>
</arguments>
<msg timestamp="20191023 09:42:56.893" level="FAIL">SalesforceMalformedRequest: Malformed request https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/services/data/v46.0/composite/sobjects. Response content: [{'message': "No such column 'Age' on sobject of type Contact", 'errorCode': 'INVALID_FIELD'}]</msg>
<status status="FAIL" starttime="20191023 09:42:56.723" endtime="20191023 09:42:56.893"></status>
</kw>
<status status="PASS" starttime="20191023 09:42:56.723" endtime="20191023 09:42:56.894"></status>
</kw>
<tags>
<tag>api</tag>
</tags>
<status status="PASS" starttime="20191023 09:42:49.737" endtime="20191023 09:42:56.894" critical="yes"></status>
</test>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce" type="teardown">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:42:56.896" level="INFO">Deleting 40 records</msg>
<msg timestamp="20191023 09:42:56.896" level="INFO">  Deleting Contact 0034F00000SaS5AQAV</msg>
<msg timestamp="20191023 09:42:56.896" level="INFO">Deleting Contact with Id 0034F00000SaS5AQAV</msg>
<msg timestamp="20191023 09:42:57.309" level="INFO">  Deleting Contact 0034F00000SaS59QAF</msg>
<msg timestamp="20191023 09:42:57.309" level="INFO">Deleting Contact with Id 0034F00000SaS59QAF</msg>
<msg timestamp="20191023 09:42:57.717" level="INFO">  Deleting Contact 0034F00000SaS58QAF</msg>
<msg timestamp="20191023 09:42:57.717" level="INFO">Deleting Contact with Id 0034F00000SaS58QAF</msg>
<msg timestamp="20191023 09:42:58.458" level="INFO">  Deleting Contact 0034F00000SaS57QAF</msg>
<msg timestamp="20191023 09:42:58.458" level="INFO">Deleting Contact with Id 0034F00000SaS57QAF</msg>
<msg timestamp="20191023 09:42:58.816" level="INFO">  Deleting Contact 0034F00000SaS56QAF</msg>
<msg timestamp="20191023 09:42:58.816" level="INFO">Deleting Contact with Id 0034F00000SaS56QAF</msg>
<msg timestamp="20191023 09:42:59.181" level="INFO">  Deleting Contact 0034F00000SaS55QAF</msg>
<msg timestamp="20191023 09:42:59.181" level="INFO">Deleting Contact with Id 0034F00000SaS55QAF</msg>
<msg timestamp="20191023 09:42:59.551" level="INFO">  Deleting Contact 0034F00000SaS54QAF</msg>
<msg timestamp="20191023 09:42:59.551" level="INFO">Deleting Contact with Id 0034F00000SaS54QAF</msg>
<msg timestamp="20191023 09:42:59.915" level="INFO">  Deleting Contact 0034F00000SaS53QAF</msg>
<msg timestamp="20191023 09:42:59.915" level="INFO">Deleting Contact with Id 0034F00000SaS53QAF</msg>
<msg timestamp="20191023 09:43:00.538" level="INFO">  Deleting Contact 0034F00000SaS52QAF</msg>
<msg timestamp="20191023 09:43:00.538" level="INFO">Deleting Contact with Id 0034F00000SaS52QAF</msg>
<msg timestamp="20191023 09:43:00.817" level="INFO">  Deleting Contact 0034F00000SaS51QAF</msg>
<msg timestamp="20191023 09:43:00.818" level="INFO">Deleting Contact with Id 0034F00000SaS51QAF</msg>
<msg timestamp="20191023 09:43:01.132" level="INFO">  Deleting Contact 0034F00000SaS50QAF</msg>
<msg timestamp="20191023 09:43:01.132" level="INFO">Deleting Contact with Id 0034F00000SaS50QAF</msg>
<msg timestamp="20191023 09:43:01.395" level="INFO">  Deleting Contact 0034F00000SaS4zQAF</msg>
<msg timestamp="20191023 09:43:01.395" level="INFO">Deleting Contact with Id 0034F00000SaS4zQAF</msg>
<msg timestamp="20191023 09:43:01.730" level="INFO">  Deleting Contact 0034F00000SaS4yQAF</msg>
<msg timestamp="20191023 09:43:01.730" level="INFO">Deleting Contact with Id 0034F00000SaS4yQAF</msg>
<msg timestamp="20191023 09:43:02.003" level="INFO">  Deleting Contact 0034F00000SaS4xQAF</msg>
<msg timestamp="20191023 09:43:02.003" level="INFO">Deleting Contact with Id 0034F00000SaS4xQAF</msg>
<msg timestamp="20191023 09:43:02.455" level="INFO">  Deleting Contact 0034F00000SaS4wQAF</msg>
<msg timestamp="20191023 09:43:02.455" level="INFO">Deleting Contact with Id 0034F00000SaS4wQAF</msg>
<msg timestamp="20191023 09:43:02.784" level="INFO">  Deleting Contact 0034F00000SaS4vQAF</msg>
<msg timestamp="20191023 09:43:02.784" level="INFO">Deleting Contact with Id 0034F00000SaS4vQAF</msg>
<msg timestamp="20191023 09:43:03.065" level="INFO">  Deleting Contact 0034F00000SaS4uQAF</msg>
<msg timestamp="20191023 09:43:03.066" level="INFO">Deleting Contact with Id 0034F00000SaS4uQAF</msg>
<msg timestamp="20191023 09:43:03.380" level="INFO">  Deleting Contact 0034F00000SaS4tQAF</msg>
<msg timestamp="20191023 09:43:03.380" level="INFO">Deleting Contact with Id 0034F00000SaS4tQAF</msg>
<msg timestamp="20191023 09:43:03.647" level="INFO">  Deleting Contact 0034F00000SaS4sQAF</msg>
<msg timestamp="20191023 09:43:03.647" level="INFO">Deleting Contact with Id 0034F00000SaS4sQAF</msg>
<msg timestamp="20191023 09:43:03.919" level="INFO">  Deleting Contact 0034F00000SaS4rQAF</msg>
<msg timestamp="20191023 09:43:03.919" level="INFO">Deleting Contact with Id 0034F00000SaS4rQAF</msg>
<msg timestamp="20191023 09:43:04.223" level="INFO">  Deleting Contact 0034F00000SaS4qQAF</msg>
<msg timestamp="20191023 09:43:04.223" level="INFO">Deleting Contact with Id 0034F00000SaS4qQAF</msg>
<msg timestamp="20191023 09:43:04.590" level="INFO">  Deleting Contact 0034F00000SaS4pQAF</msg>
<msg timestamp="20191023 09:43:04.590" level="INFO">Deleting Contact with Id 0034F00000SaS4pQAF</msg>
<msg timestamp="20191023 09:43:04.914" level="INFO">  Deleting Contact 0034F00000SaS4oQAF</msg>
<msg timestamp="20191023 09:43:04.914" level="INFO">Deleting Contact with Id 0034F00000SaS4oQAF</msg>
<msg timestamp="20191023 09:43:05.224" level="INFO">  Deleting Contact 0034F00000SaS4nQAF</msg>
<msg timestamp="20191023 09:43:05.224" level="INFO">Deleting Contact with Id 0034F00000SaS4nQAF</msg>
<msg timestamp="20191023 09:43:05.538" level="INFO">  Deleting Contact 0034F00000SaS4mQAF</msg>
<msg timestamp="20191023 09:43:05.538" level="INFO">Deleting Contact with Id 0034F00000SaS4mQAF</msg>
<msg timestamp="20191023 09:43:05.872" level="INFO">  Deleting Contact 0034F00000SaS4lQAF</msg>
<msg timestamp="20191023 09:43:05.872" level="INFO">Deleting Contact with Id 0034F00000SaS4lQAF</msg>
<msg timestamp="20191023 09:43:06.183" level="INFO">  Deleting Contact 0034F00000SaS4kQAF</msg>
<msg timestamp="20191023 09:43:06.183" level="INFO">Deleting Contact with Id 0034F00000SaS4kQAF</msg>
<msg timestamp="20191023 09:43:06.522" level="INFO">  Deleting Contact 0034F00000SaS4jQAF</msg>
<msg timestamp="20191023 09:43:06.522" level="INFO">Deleting Contact with Id 0034F00000SaS4jQAF</msg>
<msg timestamp="20191023 09:43:06.811" level="INFO">  Deleting Contact 0034F00000SaS4iQAF</msg>
<msg timestamp="20191023 09:43:06.812" level="INFO">Deleting Contact with Id 0034F00000SaS4iQAF</msg>
<msg timestamp="20191023 09:43:07.436" level="INFO">  Deleting Contact 0034F00000SaS4hQAF</msg>
<msg timestamp="20191023 09:43:07.436" level="INFO">Deleting Contact with Id 0034F00000SaS4hQAF</msg>
<msg timestamp="20191023 09:43:07.779" level="INFO">  Deleting Contact 0034F00000SaS4gQAF</msg>
<msg timestamp="20191023 09:43:07.780" level="INFO">Deleting Contact with Id 0034F00000SaS4gQAF</msg>
<msg timestamp="20191023 09:43:08.095" level="INFO">  Deleting Contact 0034F00000SaS4fQAF</msg>
<msg timestamp="20191023 09:43:08.095" level="INFO">Deleting Contact with Id 0034F00000SaS4fQAF</msg>
<msg timestamp="20191023 09:43:08.400" level="INFO">  Deleting Contact 0034F00000SaS4eQAF</msg>
<msg timestamp="20191023 09:43:08.400" level="INFO">Deleting Contact with Id 0034F00000SaS4eQAF</msg>
<msg timestamp="20191023 09:43:08.714" level="INFO">  Deleting Contact 0034F00000SaS4dQAF</msg>
<msg timestamp="20191023 09:43:08.714" level="INFO">Deleting Contact with Id 0034F00000SaS4dQAF</msg>
<msg timestamp="20191023 09:43:09.024" level="INFO">  Deleting Contact 0034F00000SaS4cQAF</msg>
<msg timestamp="20191023 09:43:09.024" level="INFO">Deleting Contact with Id 0034F00000SaS4cQAF</msg>
<msg timestamp="20191023 09:43:09.313" level="INFO">  Deleting Contact 0034F00000SaS4bQAF</msg>
<msg timestamp="20191023 09:43:09.313" level="INFO">Deleting Contact with Id 0034F00000SaS4bQAF</msg>
<msg timestamp="20191023 09:43:09.629" level="INFO">  Deleting Contact 0034F00000SaS4aQAF</msg>
<msg timestamp="20191023 09:43:09.629" level="INFO">Deleting Contact with Id 0034F00000SaS4aQAF</msg>
<msg timestamp="20191023 09:43:09.897" level="INFO">  Deleting Contact 0034F00000SaS4ZQAV</msg>
<msg timestamp="20191023 09:43:09.897" level="INFO">Deleting Contact with Id 0034F00000SaS4ZQAV</msg>
<msg timestamp="20191023 09:43:10.201" level="INFO">  Deleting Contact 0034F00000SaS4YQAV</msg>
<msg timestamp="20191023 09:43:10.201" level="INFO">Deleting Contact with Id 0034F00000SaS4YQAV</msg>
<msg timestamp="20191023 09:43:10.545" level="INFO">  Deleting Contact 0034F00000SaS4XQAV</msg>
<msg timestamp="20191023 09:43:10.546" level="INFO">Deleting Contact with Id 0034F00000SaS4XQAV</msg>
<status status="PASS" starttime="20191023 09:42:56.896" endtime="20191023 09:43:10.910"></status>
</kw>
<status status="PASS" starttime="20191023 09:41:53.229" endtime="20191023 09:43:10.911"></status>
</suite>
<suite id="s1-s2-s2" name="Browsers" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/browsers.robot">
<test id="s1-s2-s2-t1" name="Open Test Browser Twice">
<kw name="Assert active browser count">
<doc>Assert that an expected number of browsers are active</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="Get Active Browser Ids" library="cumulusci.robotframework.Salesforce">
<doc>Return the id of all open browser ids</doc>
<assign>
<var>@{browsers}</var>
</assign>
<msg timestamp="20191023 09:43:10.929" level="INFO">@{browsers} = [ ]</msg>
<status status="PASS" starttime="20191023 09:43:10.928" endtime="20191023 09:43:10.929"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${browsers}</arg>
</arguments>
<assign>
<var>${actual count}</var>
</assign>
<msg timestamp="20191023 09:43:10.929" level="INFO">Length is 0</msg>
<msg timestamp="20191023 09:43:10.929" level="INFO">${actual count} = 0</msg>
<status status="PASS" starttime="20191023 09:43:10.929" endtime="20191023 09:43:10.929"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${browsers}</arg>
<arg>${expected count}</arg>
<arg>Expected to find ${expected count} open browsers, found ${actual count}</arg>
</arguments>
<msg timestamp="20191023 09:43:10.929" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191023 09:43:10.929" endtime="20191023 09:43:10.929"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:10.928" endtime="20191023 09:43:10.929"></status>
</kw>
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:10.930" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:10.930" endtime="20191023 09:43:10.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:10.932" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d85e7f0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:10.931" endtime="20191023 09:43:10.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:10.932" endtime="20191023 09:43:10.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:10.932" endtime="20191023 09:43:10.933"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:10.933" endtime="20191023 09:43:10.933"></status>
</kw>
<msg timestamp="20191023 09:43:10.933" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d85e7f0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:10.931" endtime="20191023 09:43:10.933"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:10.934" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:15.641" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:10.933" endtime="20191023 09:43:15.642"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:10.931" endtime="20191023 09:43:15.643"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:10.930" endtime="20191023 09:43:15.643"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:10.930" endtime="20191023 09:43:15.643"></status>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:15.644" endtime="20191023 09:43:15.645"></status>
</kw>
<doc>Verify that we can open two browsers in a single test</doc>
<tags>
<tag>issue:1068</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:10.928" endtime="20191023 09:43:15.645" critical="yes">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s2-t2" name="Browser aliases">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open test browser</arg>
<arg>alias=browser1</arg>
<arg>AND</arg>
<arg>Open test browser</arg>
<arg>alias=browser2</arg>
<arg>AND</arg>
<arg>Go to</arg>
<arg>about:blank</arg>
</arguments>
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<arguments>
<arg>alias=browser1</arg>
</arguments>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:15.654" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:15.652" endtime="20191023 09:43:15.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:15.659" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d896080&gt;</msg>
<status status="PASS" starttime="20191023 09:43:15.658" endtime="20191023 09:43:15.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:15.659" endtime="20191023 09:43:15.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:15.661" endtime="20191023 09:43:15.662"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:15.662" endtime="20191023 09:43:15.663"></status>
</kw>
<msg timestamp="20191023 09:43:15.663" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d896080&gt;</msg>
<status status="PASS" starttime="20191023 09:43:15.658" endtime="20191023 09:43:15.663"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:15.664" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:20.476" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:15.663" endtime="20191023 09:43:20.476"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:15.657" endtime="20191023 09:43:20.476"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:15.656" endtime="20191023 09:43:20.476"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:15.649" endtime="20191023 09:43:20.476"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:15.648" endtime="20191023 09:43:20.476"></status>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:20.477" endtime="20191023 09:43:20.478"></status>
</kw>
<doc>Verify that aliases are properly handled in Open Test Browser</doc>
<tags>
<tag>issue:1068</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:15.647" endtime="20191023 09:43:20.478" critical="yes">Setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s2-t3" name="Default browser size">
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:20.481" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:20.481" endtime="20191023 09:43:20.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:20.486" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d85bda0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:20.484" endtime="20191023 09:43:20.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:20.486" endtime="20191023 09:43:20.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:20.491" endtime="20191023 09:43:20.492"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:20.493" endtime="20191023 09:43:20.493"></status>
</kw>
<msg timestamp="20191023 09:43:20.493" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d85bda0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:20.483" endtime="20191023 09:43:20.493"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:20.494" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:23.514" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:20.493" endtime="20191023 09:43:23.514"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:20.482" endtime="20191023 09:43:23.515"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:20.481" endtime="20191023 09:43:23.515"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:20.480" endtime="20191023 09:43:23.515"></status>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:23.516" endtime="20191023 09:43:23.516"></status>
</kw>
<doc>Verify that we automatically resize browser to minimum supported size</doc>
<status status="FAIL" starttime="20191023 09:43:20.479" endtime="20191023 09:43:23.517" critical="yes">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s2-t4" name="Explicit browser size">
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<arguments>
<arg>size=1400x1200</arg>
</arguments>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:23.525" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:23.524" endtime="20191023 09:43:23.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:23.528" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d7584e0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:23.527" endtime="20191023 09:43:23.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:23.528" endtime="20191023 09:43:23.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:23.529" endtime="20191023 09:43:23.529"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:23.529" endtime="20191023 09:43:23.530"></status>
</kw>
<msg timestamp="20191023 09:43:23.530" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d7584e0&gt;</msg>
<status status="PASS" starttime="20191023 09:43:23.527" endtime="20191023 09:43:23.530"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:23.531" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:27.363" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:23.530" endtime="20191023 09:43:27.364"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:23.526" endtime="20191023 09:43:27.364"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:23.525" endtime="20191023 09:43:27.364"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:23.521" endtime="20191023 09:43:27.364"></status>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:27.365" endtime="20191023 09:43:27.366"></status>
</kw>
<doc>Verify we can set an explicit browser size when opening the window</doc>
<status status="FAIL" starttime="20191023 09:43:23.518" endtime="20191023 09:43:27.366" critical="yes">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s2-t5" name="Open Test Browser calls Log Browser Capabilities">
<kw name="Reset Robot Log Cache" library="TestListener">
<status status="PASS" starttime="20191023 09:43:27.368" endtime="20191023 09:43:27.368"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${BROWSER}</arg>
<arg>headlesschrome</arg>
</arguments>
<msg timestamp="20191023 09:43:27.369" level="INFO">${BROWSER} = headlesschrome</msg>
<status status="PASS" starttime="20191023 09:43:27.369" endtime="20191023 09:43:27.369"></status>
</kw>
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<arguments>
<arg>alias=chrome</arg>
</arguments>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:27.371" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:27.370" endtime="20191023 09:43:27.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:27.374" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d703f98&gt;</msg>
<status status="PASS" starttime="20191023 09:43:27.373" endtime="20191023 09:43:27.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<kw name="Chrome Set Headless" library="Salesforce">
<arguments>
<arg>${options}</arg>
</arguments>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>set_headless</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:27.375" endtime="20191023 09:43:27.376"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:27.376" endtime="20191023 09:43:27.377"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-background-timer-throttling</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:27.377" endtime="20191023 09:43:27.377"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:27.375" endtime="20191023 09:43:27.377"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:27.374" endtime="20191023 09:43:27.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:27.378" endtime="20191023 09:43:27.378"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:27.378" endtime="20191023 09:43:27.379"></status>
</kw>
<msg timestamp="20191023 09:43:27.379" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d703f98&gt;</msg>
<status status="PASS" starttime="20191023 09:43:27.373" endtime="20191023 09:43:27.379"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:27.380" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:28.766" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:27.379" endtime="20191023 09:43:28.766"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:27.372" endtime="20191023 09:43:28.766"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:27.371" endtime="20191023 09:43:28.766"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:27.370" endtime="20191023 09:43:28.767"></status>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:28.767" endtime="20191023 09:43:28.768"></status>
</kw>
<doc>Verify that browser capabilities are logged when we call
Open Test Browser</doc>
<status status="FAIL" starttime="20191023 09:43:27.367" endtime="20191023 09:43:28.768" critical="yes">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<kw name="Close All Browsers" library="SeleniumLibrary" type="teardown">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:28.774" endtime="20191023 09:43:28.775"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:10.918" endtime="20191023 09:43:28.775"></status>
</suite>
<suite id="s1-s2-s3" name="Create Contact" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/create_contact.robot">
<kw name="Open Test Browser" library="Salesforce" type="setup">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:28.798" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:28.798" endtime="20191023 09:43:28.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:28.832" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d425400&gt;</msg>
<status status="PASS" starttime="20191023 09:43:28.831" endtime="20191023 09:43:28.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:28.832" endtime="20191023 09:43:28.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:28.833" endtime="20191023 09:43:28.834"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:28.834" endtime="20191023 09:43:28.834"></status>
</kw>
<msg timestamp="20191023 09:43:28.835" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d425400&gt;</msg>
<status status="PASS" starttime="20191023 09:43:28.831" endtime="20191023 09:43:28.835"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:28.836" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:31.434" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:28.835" endtime="20191023 09:43:31.435"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:28.799" endtime="20191023 09:43:31.435"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:28.799" endtime="20191023 09:43:31.435"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:28.797" endtime="20191023 09:43:31.435"></status>
</kw>
<test id="s1-s2-s3-t1" name="Via API">
<status status="FAIL" starttime="20191023 09:43:31.435" endtime="20191023 09:43:31.436" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s3-t2" name="Via UI">
<status status="FAIL" starttime="20191023 09:43:31.437" endtime="20191023 09:43:31.437" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<kw name="Delete Records and Close Browser" library="Salesforce" type="teardown">
<doc>This will close all open browser windows and then delete
all records created with the Salesforce API during this
testing session.</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:31.439" endtime="20191023 09:43:31.439"></status>
</kw>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:43:31.439" level="INFO">Deleting 0 records</msg>
<status status="PASS" starttime="20191023 09:43:31.439" endtime="20191023 09:43:31.439"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:31.438" endtime="20191023 09:43:31.440"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:28.781" endtime="20191023 09:43:31.440">Suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</suite>
<suite id="s1-s2-s4" name="Pageobjects" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/pageobjects">
<suite id="s1-s2-s4-s1" name="Pageobjects" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/pageobjects/pageobjects.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create test data</arg>
<arg>AND</arg>
<arg>Open Test Browser</arg>
</arguments>
<kw name="Create Test Data">
<doc>Create a Contact for Connor MacLeod if there isn't one. If there's
already more than one, it's a fatal error since some tests depend
on their being only one.</doc>
<kw name="Salesforce Query" library="cumulusci.robotframework.Salesforce">
<doc>Constructs and runs a simple SOQL query and returns the dict results</doc>
<arguments>
<arg>Contact</arg>
<arg>Firstname=Connor</arg>
<arg>LastName=MacLeod</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191023 09:43:31.471" level="INFO">Running SOQL Query: SELECT Id FROM Contact WHERE Firstname = 'Connor' AND LastName = 'MacLeod'</msg>
<msg timestamp="20191023 09:43:31.710" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20191023 09:43:31.471" endtime="20191023 09:43:31.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>len($result) &gt; 1</arg>
<arg>Fatal Error</arg>
<arg>Expected to find only one contact named Connor MacLeod, found several</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:31.710" endtime="20191023 09:43:31.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>len($result) == 0</arg>
<arg>Salesforce Insert</arg>
<arg>Contact</arg>
<arg>FirstName=Connor</arg>
<arg>LastName=MacLeod</arg>
</arguments>
<kw name="Salesforce Insert" library="cumulusci.robotframework.Salesforce">
<doc>Inserts a Salesforce object setting fields using kwargs and returns the id</doc>
<arguments>
<arg>Contact</arg>
<arg>FirstName=Connor</arg>
<arg>LastName=MacLeod</arg>
</arguments>
<msg timestamp="20191023 09:43:31.712" level="INFO">Inserting Contact with values {'FirstName': 'Connor', 'LastName': 'MacLeod'}</msg>
<msg timestamp="20191023 09:43:32.045" level="INFO">Storing Contact 0034F00000SaS5BQAV to session records</msg>
<status status="PASS" starttime="20191023 09:43:31.712" endtime="20191023 09:43:32.045"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:31.711" endtime="20191023 09:43:32.045"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:31.471" endtime="20191023 09:43:32.045"></status>
</kw>
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:32.046" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:32.046" endtime="20191023 09:43:32.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:32.048" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d57acf8&gt;</msg>
<status status="PASS" starttime="20191023 09:43:32.048" endtime="20191023 09:43:32.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:32.048" endtime="20191023 09:43:32.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:32.048" endtime="20191023 09:43:32.049"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:32.049" endtime="20191023 09:43:32.049"></status>
</kw>
<msg timestamp="20191023 09:43:32.049" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d57acf8&gt;</msg>
<status status="PASS" starttime="20191023 09:43:32.047" endtime="20191023 09:43:32.050"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:32.050" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:34.482" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:32.050" endtime="20191023 09:43:34.482"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:32.047" endtime="20191023 09:43:34.483"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:32.046" endtime="20191023 09:43:34.483"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:32.045" endtime="20191023 09:43:34.483"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:31.470" endtime="20191023 09:43:34.483"></status>
</kw>
<test id="s1-s2-s4-s1-t1" name="Load page object, using defined page object">
<doc>If we can't do this, all hope is lost!</doc>
<status status="FAIL" starttime="20191023 09:43:34.484" endtime="20191023 09:43:34.485" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t2" name="Go to page automatically loads page object">
<doc>Verify that 'go to page' automatically loads the page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.485" endtime="20191023 09:43:34.486" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t3" name="Go to page and current page should be, using defined page object">
<doc>Verify we can go to an implemented page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.487" endtime="20191023 09:43:34.487" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t4" name="Go to page, using generic page object">
<doc>Verify we can go to a page object for which there is
no explicit definition, but for which there is a generic
(base) class.</doc>
<status status="FAIL" starttime="20191023 09:43:34.488" endtime="20191023 09:43:34.489" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t5" name="Go to page, using multiple generic pages">
<doc>Verify we can use multiple generic page objects in the same
test. Earlier versions of the library had a bug that
prevented this from working. What was happening is that we
were giving the library a generic name like "DetailPage"
rather than a name that included the object type such as
"ContactDetailPage".</doc>
<status status="FAIL" starttime="20191023 09:43:34.489" endtime="20191023 09:43:34.491" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t6" name="Get page object">
<doc>Verify that we can call the `get page object` keyword and that
it returns a page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.492" endtime="20191023 09:43:34.493" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t7" name="Call keyword of defined page object">
<doc>Verify we can call a keyword in a defined page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.493" endtime="20191023 09:43:34.494" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t8" name="Load page object, using generic page object">
<doc>Verify that 'load page object' works when using a generic
page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.494" endtime="20191023 09:43:34.495" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t9" name="Current page should be, using generic page object">
<doc>Verify that 'current page should be' works when
using a generic page object</doc>
<status status="FAIL" starttime="20191023 09:43:34.496" endtime="20191023 09:43:34.497" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t10" name="Current page should be throws appropriate error">
<doc>Verifies the error that is thrown when 'current page should be'
is false</doc>
<status status="FAIL" starttime="20191023 09:43:34.497" endtime="20191023 09:43:34.498" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t11" name="Error when no page object can be found">
<doc>Verify we get an error if no page object exists, and
there is no suitable base class</doc>
<status status="FAIL" starttime="20191023 09:43:34.499" endtime="20191023 09:43:34.500" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t12" name="Log page object keywords">
<doc>Verify that 'log page object keywords' doesn't throw an error</doc>
<status status="FAIL" starttime="20191023 09:43:34.500" endtime="20191023 09:43:34.501" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t13" name="Load multiple page objects in library search order">
<doc>Loading a page object inserts it at the start of the
library search order. Verify that that happens properly.</doc>
<tags>
<tag>bryan</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:34.502" endtime="20191023 09:43:34.503" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t14" name="Base class: HomePage">
<doc>Verify we can go to the generic Home page
(assuming we don't have an explicit TaskHomePage)</doc>
<status status="FAIL" starttime="20191023 09:43:34.504" endtime="20191023 09:43:34.504" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t15" name="Base class: ListingPage">
<doc>Verify we can go to the generic Listing page
(assuming we don't have an explicit TaskListingPage)</doc>
<status status="FAIL" starttime="20191023 09:43:34.505" endtime="20191023 09:43:34.505" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t16" name="Base class: DetailPage">
<doc>Verify we can go to the generic Detail page
(assuming we don't have an explicit TaskDetailPage)</doc>
<status status="FAIL" starttime="20191023 09:43:34.506" endtime="20191023 09:43:34.506" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t17" name="Base class: DetailPage with no matches">
<status status="FAIL" starttime="20191023 09:43:34.507" endtime="20191023 09:43:34.508" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s4-s1-t18" name="Base class: DetailPage with more than one match">
<status status="FAIL" starttime="20191023 09:43:34.508" endtime="20191023 09:43:34.509" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<kw name="Delete Records and Close Browser" library="Salesforce" type="teardown">
<doc>This will close all open browser windows and then delete
all records created with the Salesforce API during this
testing session.</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:34.510" endtime="20191023 09:43:34.511"></status>
</kw>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:43:34.511" level="INFO">Deleting 1 records</msg>
<msg timestamp="20191023 09:43:34.511" level="INFO">  Deleting Contact 0034F00000SaS5BQAV</msg>
<msg timestamp="20191023 09:43:34.511" level="INFO">Deleting Contact with Id 0034F00000SaS5BQAV</msg>
<status status="PASS" starttime="20191023 09:43:34.511" endtime="20191023 09:43:35.107"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:34.510" endtime="20191023 09:43:35.107"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:31.446" endtime="20191023 09:43:35.107">Suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</suite>
<status status="FAIL" starttime="20191023 09:43:31.441" endtime="20191023 09:43:35.110"></status>
</suite>
<suite id="s1-s2-s5" name="Populate" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/populate.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open test browser</arg>
<arg>Create opportunity</arg>
</arguments>
<kw name="Open Test Browser" library="Salesforce">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:35.125" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:35.125" endtime="20191023 09:43:35.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:35.126" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d755160&gt;</msg>
<status status="PASS" starttime="20191023 09:43:35.126" endtime="20191023 09:43:35.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:35.126" endtime="20191023 09:43:35.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:35.127" endtime="20191023 09:43:35.127"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:35.127" endtime="20191023 09:43:35.127"></status>
</kw>
<msg timestamp="20191023 09:43:35.127" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d755160&gt;</msg>
<status status="PASS" starttime="20191023 09:43:35.126" endtime="20191023 09:43:35.128"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:35.128" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:37.731" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:35.128" endtime="20191023 09:43:37.731"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:35.126" endtime="20191023 09:43:37.732"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:35.125" endtime="20191023 09:43:37.732"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:35.124" endtime="20191023 09:43:37.732"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:35.124" endtime="20191023 09:43:37.732"></status>
</kw>
<test id="s1-s2-s5-t1" name="Test Populate ability to clear a field">
<doc>We've had problems with the populate keyword not always
clearing the field before inserting text. This will try
to set various fields to a new value and verify that the
new value overwrites the old rather than append to it</doc>
<status status="FAIL" starttime="20191023 09:43:37.733" endtime="20191023 09:43:37.734" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<kw name="Delete Records and Close Browser" library="Salesforce" type="teardown">
<doc>This will close all open browser windows and then delete
all records created with the Salesforce API during this
testing session.</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:37.736" endtime="20191023 09:43:37.736"></status>
</kw>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:43:37.737" level="INFO">Deleting 0 records</msg>
<status status="PASS" starttime="20191023 09:43:37.737" endtime="20191023 09:43:37.737"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:37.735" endtime="20191023 09:43:37.737"></status>
</kw>
<doc>This suite tests the `Populate Field` keyword.
Specifically, it verifies that the keyword properly
overwrites previous values. We had some bugs where
new values were getting appended rather than replacing
existing values.

This suite uses an opportunity, since the edit dialog
has several different field types on it.</doc>
<status status="FAIL" starttime="20191023 09:43:35.112" endtime="20191023 09:43:37.737">Suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</suite>
<suite id="s1-s2-s6" name="Ui" source="/Users/pprescod/code/CumulusCI/cumulusci/robotframework/tests/salesforce/ui.robot">
<kw name="Open Test Browser" library="Salesforce" type="setup">
<doc>Opens a test browser to the org.</doc>
<kw name="Login Url" library="cumulusci.robotframework.CumulusCI">
<doc>Returns the login url which will automatically log into the target
Salesforce org.  By default, the org_name passed to the library
constructor is used but this can be overridden with the org option
to log into a different org.</doc>
<assign>
<var>${login_url}</var>
</assign>
<msg timestamp="20191023 09:43:37.752" level="INFO">${login_url} = https://efficiency-fun-590-dev-ed.cs93.my.salesforce.com/secur/frontdoor.jsp?sid=MASKED</msg>
<status status="PASS" starttime="20191023 09:43:37.752" endtime="20191023 09:43:37.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'chrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'firefox'</arg>
<arg>Open Test Browser Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Open Test Browser Chrome</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}' == 'headlessfirefox'</arg>
<arg>Open Test Browser Headless Firefox</arg>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
<arg>ELSE</arg>
<arg>Open Browser</arg>
<arg>${login_url}</arg>
<arg>${BROWSER}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Open Test Browser Chrome" library="Salesforce">
<arguments>
<arg>${login_url}</arg>
<arg>alias=${alias}</arg>
</arguments>
<kw name="Get Chrome Options" library="Salesforce">
<assign>
<var>${options}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>selenium.webdriver.ChromeOptions()</arg>
<arg>modules=selenium</arg>
</arguments>
<assign>
<var>${options}</var>
</assign>
<msg timestamp="20191023 09:43:37.755" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d896828&gt;</msg>
<status status="PASS" starttime="20191023 09:43:37.754" endtime="20191023 09:43:37.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BROWSER}' == 'headlesschrome'</arg>
<arg>Chrome Set Headless</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:37.755" endtime="20191023 09:43:37.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CHROME_BINARY}' != '${empty}'</arg>
<arg>Chrome Set Binary</arg>
<arg>${options}</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:37.756" endtime="20191023 09:43:37.756"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--disable-notifications</arg>
</arguments>
<status status="PASS" starttime="20191023 09:43:37.756" endtime="20191023 09:43:37.757"></status>
</kw>
<msg timestamp="20191023 09:43:37.757" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10d896828&gt;</msg>
<status status="PASS" starttime="20191023 09:43:37.754" endtime="20191023 09:43:37.757"></status>
</kw>
<kw name="Create Webdriver With Retry" library="cumulusci.robotframework.Salesforce">
<doc>Call the Create Webdriver keyword.</doc>
<arguments>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<arg>alias=${alias}</arg>
</arguments>
<msg timestamp="20191023 09:43:37.757" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg timestamp="20191023 09:43:40.241" level="FAIL">SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</msg>
<status status="FAIL" starttime="20191023 09:43:37.757" endtime="20191023 09:43:40.242"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:37.753" endtime="20191023 09:43:40.242"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:37.752" endtime="20191023 09:43:40.242"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:37.752" endtime="20191023 09:43:40.243"></status>
</kw>
<test id="s1-s2-s6-t1" name="Click Modal Button">
<status status="FAIL" starttime="20191023 09:43:40.243" endtime="20191023 09:43:40.244" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t2" name="Click Object Button">
<status status="FAIL" starttime="20191023 09:43:40.245" endtime="20191023 09:43:40.245" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t3" name="Click Related List Button">
<status status="FAIL" starttime="20191023 09:43:40.246" endtime="20191023 09:43:40.247" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t4" name="Close Modal">
<status status="FAIL" starttime="20191023 09:43:40.247" endtime="20191023 09:43:40.248" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t5" name="Current App Should Be">
<status status="FAIL" starttime="20191023 09:43:40.248" endtime="20191023 09:43:40.249" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t6" name="Select App Launcher Tab">
<doc>Verify that 'Select App Launcher Tab' works</doc>
<status status="FAIL" starttime="20191023 09:43:40.249" endtime="20191023 09:43:40.250" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t7" name="Get Current Record Id">
<status status="FAIL" starttime="20191023 09:43:40.251" endtime="20191023 09:43:40.251" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t8" name="Get Related List Count">
<status status="FAIL" starttime="20191023 09:43:40.251" endtime="20191023 09:43:40.252" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t9" name="Go To Setup Home">
<status status="FAIL" starttime="20191023 09:43:40.252" endtime="20191023 09:43:40.253" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t10" name="Go To Setup Object Manager">
<status status="FAIL" starttime="20191023 09:43:40.254" endtime="20191023 09:43:40.254" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t11" name="Go To Object Home">
<tags>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:40.255" endtime="20191023 09:43:40.255" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t12" name="Go To Object List">
<tags>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:40.256" endtime="20191023 09:43:40.257" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t13" name="Go To Object List With Filter">
<tags>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:40.258" endtime="20191023 09:43:40.259" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t14" name="Go To Record Home">
<tags>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20191023 09:43:40.259" endtime="20191023 09:43:40.260" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t15" name="Header Field Should Have Value">
<status status="FAIL" starttime="20191023 09:43:40.260" endtime="20191023 09:43:40.261" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t16" name="Header Field Should Not Have Value">
<status status="FAIL" starttime="20191023 09:43:40.261" endtime="20191023 09:43:40.262" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t17" name="Header Field Should Have Link">
<status status="FAIL" starttime="20191023 09:43:40.263" endtime="20191023 09:43:40.264" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t18" name="Header Field Should Not Have Link">
<status status="FAIL" starttime="20191023 09:43:40.265" endtime="20191023 09:43:40.266" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t19" name="Click Header Field Link">
<status status="FAIL" starttime="20191023 09:43:40.267" endtime="20191023 09:43:40.267" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t20" name="Open App Launcher">
<status status="FAIL" starttime="20191023 09:43:40.268" endtime="20191023 09:43:40.268" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t21" name="Populate Field">
<status status="FAIL" starttime="20191023 09:43:40.269" endtime="20191023 09:43:40.271" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t22" name="Populate Lookup Field">
<status status="FAIL" starttime="20191023 09:43:40.271" endtime="20191023 09:43:40.272" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<test id="s1-s2-s6-t23" name="Populate Form">
<status status="FAIL" starttime="20191023 09:43:40.273" endtime="20191023 09:43:40.274" critical="yes">Parent suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</test>
<kw name="Delete Records and Close Browser" library="Salesforce" type="teardown">
<doc>This will close all open browser windows and then delete
all records created with the Salesforce API during this
testing session.</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191023 09:43:40.276" endtime="20191023 09:43:40.276"></status>
</kw>
<kw name="Delete Session Records" library="cumulusci.robotframework.Salesforce">
<doc>Deletes records that were created while running this test case.</doc>
<msg timestamp="20191023 09:43:40.276" level="INFO">Deleting 0 records</msg>
<status status="PASS" starttime="20191023 09:43:40.276" endtime="20191023 09:43:40.276"></status>
</kw>
<status status="PASS" starttime="20191023 09:43:40.275" endtime="20191023 09:43:40.276"></status>
</kw>
<status status="FAIL" starttime="20191023 09:43:37.739" endtime="20191023 09:43:40.276">Suite setup failed:
SessionNotCreatedException: Message: session not created: Chrome version must be between 71 and 75
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.6 x86_64)
</status>
</suite>
<status status="FAIL" starttime="20191023 09:41:53.227" endtime="20191023 09:43:40.282"></status>
</suite>
<status status="FAIL" starttime="20191023 09:38:43.625" endtime="20191023 09:43:40.292"></status>
</suite>
<statistics>
<total>
<stat pass="24" fail="49">Critical Tests</stat>
<stat pass="24" fail="49">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">api</stat>
<stat pass="0" fail="1">bryan</stat>
<stat pass="3" fail="0">bulkdata</stat>
<stat pass="0" fail="2">issue:1068</stat>
<stat pass="1" fail="0">Runme</stat>
<stat pass="0" fail="4">smoke</stat>
</tag>
<suite>
<stat pass="24" fail="49" id="s1" name="Tests">Tests</stat>
<stat pass="16" fail="0" id="s1-s1" name="Cumulusci">Tests.Cumulusci</stat>
<stat pass="9" fail="0" id="s1-s1-s1" name="Base">Tests.Cumulusci.Base</stat>
<stat pass="3" fail="0" id="s1-s1-s2" name="Bulkdata">Tests.Cumulusci.Bulkdata</stat>
<stat pass="4" fail="0" id="s1-s1-s3" name="Communities">Tests.Cumulusci.Communities</stat>
<stat pass="8" fail="49" id="s1-s2" name="Salesforce">Tests.Salesforce</stat>
<stat pass="8" fail="0" id="s1-s2-s1" name="Api">Tests.Salesforce.Api</stat>
<stat pass="0" fail="5" id="s1-s2-s2" name="Browsers">Tests.Salesforce.Browsers</stat>
<stat pass="0" fail="2" id="s1-s2-s3" name="Create Contact">Tests.Salesforce.Create Contact</stat>
<stat pass="0" fail="18" id="s1-s2-s4" name="Pageobjects">Tests.Salesforce.Pageobjects</stat>
<stat pass="0" fail="18" id="s1-s2-s4-s1" name="Pageobjects">Tests.Salesforce.Pageobjects.Pageobjects</stat>
<stat pass="0" fail="1" id="s1-s2-s5" name="Populate">Tests.Salesforce.Populate</stat>
<stat pass="0" fail="23" id="s1-s2-s6" name="Ui">Tests.Salesforce.Ui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

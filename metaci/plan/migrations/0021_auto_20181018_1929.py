# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-10-18 19:29
from __future__ import unicode_literals

from django.conf import settings
from django.contrib.auth.models import Group
from django.db import migrations
from guardian.shortcuts import assign_perm
from guardian.utils import get_anonymous_user

def create_groups_and_migrate_users(apps, schema_editor):
    Group = apps.get_model('auth.Group')
    Permission = apps.get_model('auth.Permission')
    User = apps.get_model('users.User')

    view_group = Group.objects.create(name='View All Builds')
    view_group.permissions.add(
        Permission.objects.get(codename='view_builds')
    )

    rebuild_group = Group.objects.create(name='Rebuild All Builds')
    rebuild_group.permissions.add(
        Permission.objects.get(codename='rebuild_builds')
    )

    qa_group = Group.objects.create(name='QA All Builds')
    qa_group.permissions.add(
        Permission.objects.get(codename='qa_builds')
    )

    run_group = Group.objects.create(name='Run All Plans')
    run_group.permissions.add(
        Permission.objects.get(codename='run_plan')
    )


    users = User.objects.filter(is_staff = True, is_superuser = False)
    for user in users.iterator():
        user.groups.add(
            view_group,
            rebuild_group,
            qa_group,
            run_group,
        )
        # Since access is now granted through guardian, remove is_staff
        user.is_staff = False
        user.save()


def grant_anonymous_perms(apps, schema_editor):
    PlanRepository = apps.get_model('plan.PlanRepository')
    anon = get_anonymous_user()
    for pr in PlanRepository.objects.all().iterator():
        if pr.plan.public is False:
            continue
        if pr.repo.public is False:
            continue
        assign_perm('plan.view_builds', anon, pr)
        

class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('plan', '0020_auto_20181018_1636'),
    ]

    operations = [
        migrations.RunPython(create_groups_and_migrate_users),
        migrations.RunPython(grant_anonymous_perms),
    ]

    complete_apps = ['auth','users']
